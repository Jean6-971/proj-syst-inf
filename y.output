Nonterminals useless in grammar

    Parametre


Terminals unused in grammar

    tCONST
    tERROR


Rules useless in grammar

   61 Parametre: tID
   62          | tNB


State 70 conflicts: 12 reduce/reduce
State 71 conflicts: 1 shift/reduce, 12 reduce/reduce
State 74 conflicts: 12 reduce/reduce
State 90 conflicts: 1 shift/reduce


Grammar

    0 $accept: Programme $end

    1 Programme: Fonctions

    2 Fonctions: Fonctions Main
    3          | Main
    4          | Fonctions Fonction
    5          | Fonction

    6 Fonction: tINT tID tPO ArgumentsDeclaration tPF tAO BodyRet tAF
    7         | tVOID tID tPO ArgumentsDeclaration tPF tAO Body tAF

    8 ArgumentsDeclaration: %empty
    9                     | ListeArgumentsDeclaration

   10 ListeArgumentsDeclaration: tINT tID
   11                          | tINT tID tV ListeArgumentsDeclaration

   12 Main: tINT tMAIN tPO tPF tAO BodyRet tAF
   13     | tVOID tMAIN tPO tPF tAO Body tAF

   14 Valeur: tID
   15       | tNB
   16       | Calcul
   17       | AppelFonction

   18 BodyRet: Body tRETURN Valeur tFI

   19 Body: %empty
   20     | Declaration Body
   21     | Initialisation Body
   22     | Affectation Body
   23     | BrancheIf Body
   24     | BrancheWhile Body
   25     | Printf Body
   26     | AppelFonction tFI Body

   27 Declaration: tINT tID tFI

   28 Initialisation: tINT tID tEGAL Valeur tFI

   29 Affectation: tID tEGAL Valeur tFI

   30 BrancheIf: tIF tPO Conditions tPF tAO Body tAF BranchesElseif

   31 Conditions: Valeur Comparateur Valeur
   32           | Valeur
   33           | Valeur Comparateur Valeur Conditions
   34           | Valeur Conditions

   35 Comparateur: tEGAL
   36            | tINF
   37            | tSUP
   38            | tINFEGAL
   39            | tSUPEGAL
   40            | tDIF

   41 BranchesElseif: %empty
   42               | tELSE tIF tPO Conditions tPF tAO Body tAF BranchesElseif
   43               | tELSE tAO Body tAF

   44 BrancheWhile: tWHILE tPO Conditions tPF tAO Body tAF

   45 Printf: tPRINTF tPO tG tID tG tPF tFI

   46 AppelFonction: tID tPO Arguments tPF

   47 Arguments: %empty
   48          | ListeArguments

   49 ListeArguments: Valeur
   50               | Valeur tV ListeArguments

   51 Calcul: Calcul tADD DivMul
   52       | Calcul tSOU DivMul
   53       | DivMul

   54 DivMul: DivMul tMUL Terme
   55       | DivMul tDIV Terme
   56       | Terme

   57 Terme: tPO Calcul tPF
   58      | tID
   59      | tNB
   60      | AppelFonction


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    tMAIN (258) 12 13
    tAO (259) 6 7 12 13 30 42 43 44
    tAF (260) 6 7 12 13 30 42 43 44
    tCONST (261)
    tINT (262) 6 10 11 12 27 28
    tEGAL (263) 28 29 35
    tSOU (264) 52
    tADD (265) 51
    tMUL (266) 54
    tDIV (267) 55
    tPO (268) 6 7 12 13 30 42 44 45 46 57
    tPF (269) 6 7 12 13 30 42 44 45 46 57
    tV (270) 11 50
    tFI (271) 18 26 27 28 29 45
    tPRINTF (272) 45
    tIF (273) 30 42
    tELSE (274) 42 43
    tWHILE (275) 44
    tERROR (276)
    tRETURN (277) 18
    tVOID (278) 7 13
    tINF (279) 36
    tSUP (280) 37
    tSUPEGAL (281) 39
    tINFEGAL (282) 38
    tDIF (283) 40
    tG (284) 45
    tNB <nb> (285) 15 59
    tID <var> (286) 6 7 10 11 14 27 28 29 45 46 58


Nonterminals, with rules where they appear

    $accept (32)
        on left: 0
    Programme (33)
        on left: 1
        on right: 0
    Fonctions (34)
        on left: 2 3 4 5
        on right: 1 2 4
    Fonction (35)
        on left: 6 7
        on right: 4 5
    ArgumentsDeclaration (36)
        on left: 8 9
        on right: 6 7
    ListeArgumentsDeclaration (37)
        on left: 10 11
        on right: 9 11
    Main (38)
        on left: 12 13
        on right: 2 3
    Valeur <nb> (39)
        on left: 14 15 16 17
        on right: 18 28 29 31 32 33 34 49 50
    BodyRet (40)
        on left: 18
        on right: 6 12
    Body (41)
        on left: 19 20 21 22 23 24 25 26
        on right: 7 13 18 20 21 22 23 24 25 26 30 42 43 44
    Declaration (42)
        on left: 27
        on right: 20
    Initialisation (43)
        on left: 28
        on right: 21
    Affectation (44)
        on left: 29
        on right: 22
    BrancheIf (45)
        on left: 30
        on right: 23
    Conditions (46)
        on left: 31 32 33 34
        on right: 30 33 34 42 44
    Comparateur (47)
        on left: 35 36 37 38 39 40
        on right: 31 33
    BranchesElseif (48)
        on left: 41 42 43
        on right: 30 42
    BrancheWhile (49)
        on left: 44
        on right: 24
    Printf (50)
        on left: 45
        on right: 25
    AppelFonction (51)
        on left: 46
        on right: 17 26 60
    Arguments (52)
        on left: 47 48
        on right: 46
    ListeArguments (53)
        on left: 49 50
        on right: 48 50
    Calcul <nb> (54)
        on left: 51 52 53
        on right: 16 51 52 57
    DivMul <nb> (55)
        on left: 54 55 56
        on right: 51 52 53 54 55
    Terme <nb> (56)
        on left: 57 58 59 60
        on right: 54 55 56


State 0

    0 $accept: . Programme $end

    tINT   shift, and go to state 1
    tVOID  shift, and go to state 2

    Programme  go to state 3
    Fonctions  go to state 4
    Fonction   go to state 5
    Main       go to state 6


State 1

    6 Fonction: tINT . tID tPO ArgumentsDeclaration tPF tAO BodyRet tAF
   12 Main: tINT . tMAIN tPO tPF tAO BodyRet tAF

    tMAIN  shift, and go to state 7
    tID    shift, and go to state 8


State 2

    7 Fonction: tVOID . tID tPO ArgumentsDeclaration tPF tAO Body tAF
   13 Main: tVOID . tMAIN tPO tPF tAO Body tAF

    tMAIN  shift, and go to state 9
    tID    shift, and go to state 10


State 3

    0 $accept: Programme . $end

    $end  shift, and go to state 11


State 4

    1 Programme: Fonctions .
    2 Fonctions: Fonctions . Main
    4          | Fonctions . Fonction

    tINT   shift, and go to state 1
    tVOID  shift, and go to state 2

    $default  reduce using rule 1 (Programme)

    Fonction  go to state 12
    Main      go to state 13


State 5

    5 Fonctions: Fonction .

    $default  reduce using rule 5 (Fonctions)


State 6

    3 Fonctions: Main .

    $default  reduce using rule 3 (Fonctions)


State 7

   12 Main: tINT tMAIN . tPO tPF tAO BodyRet tAF

    tPO  shift, and go to state 14


State 8

    6 Fonction: tINT tID . tPO ArgumentsDeclaration tPF tAO BodyRet tAF

    tPO  shift, and go to state 15


State 9

   13 Main: tVOID tMAIN . tPO tPF tAO Body tAF

    tPO  shift, and go to state 16


State 10

    7 Fonction: tVOID tID . tPO ArgumentsDeclaration tPF tAO Body tAF

    tPO  shift, and go to state 17


State 11

    0 $accept: Programme $end .

    $default  accept


State 12

    4 Fonctions: Fonctions Fonction .

    $default  reduce using rule 4 (Fonctions)


State 13

    2 Fonctions: Fonctions Main .

    $default  reduce using rule 2 (Fonctions)


State 14

   12 Main: tINT tMAIN tPO . tPF tAO BodyRet tAF

    tPF  shift, and go to state 18


State 15

    6 Fonction: tINT tID tPO . ArgumentsDeclaration tPF tAO BodyRet tAF

    tINT  shift, and go to state 19

    $default  reduce using rule 8 (ArgumentsDeclaration)

    ArgumentsDeclaration       go to state 20
    ListeArgumentsDeclaration  go to state 21


State 16

   13 Main: tVOID tMAIN tPO . tPF tAO Body tAF

    tPF  shift, and go to state 22


State 17

    7 Fonction: tVOID tID tPO . ArgumentsDeclaration tPF tAO Body tAF

    tINT  shift, and go to state 19

    $default  reduce using rule 8 (ArgumentsDeclaration)

    ArgumentsDeclaration       go to state 23
    ListeArgumentsDeclaration  go to state 21


State 18

   12 Main: tINT tMAIN tPO tPF . tAO BodyRet tAF

    tAO  shift, and go to state 24


State 19

   10 ListeArgumentsDeclaration: tINT . tID
   11                          | tINT . tID tV ListeArgumentsDeclaration

    tID  shift, and go to state 25


State 20

    6 Fonction: tINT tID tPO ArgumentsDeclaration . tPF tAO BodyRet tAF

    tPF  shift, and go to state 26


State 21

    9 ArgumentsDeclaration: ListeArgumentsDeclaration .

    $default  reduce using rule 9 (ArgumentsDeclaration)


State 22

   13 Main: tVOID tMAIN tPO tPF . tAO Body tAF

    tAO  shift, and go to state 27


State 23

    7 Fonction: tVOID tID tPO ArgumentsDeclaration . tPF tAO Body tAF

    tPF  shift, and go to state 28


State 24

   12 Main: tINT tMAIN tPO tPF tAO . BodyRet tAF

    tINT     shift, and go to state 29
    tPRINTF  shift, and go to state 30
    tIF      shift, and go to state 31
    tWHILE   shift, and go to state 32
    tID      shift, and go to state 33

    $default  reduce using rule 19 (Body)

    BodyRet         go to state 34
    Body            go to state 35
    Declaration     go to state 36
    Initialisation  go to state 37
    Affectation     go to state 38
    BrancheIf       go to state 39
    BrancheWhile    go to state 40
    Printf          go to state 41
    AppelFonction   go to state 42


State 25

   10 ListeArgumentsDeclaration: tINT tID .
   11                          | tINT tID . tV ListeArgumentsDeclaration

    tV  shift, and go to state 43

    $default  reduce using rule 10 (ListeArgumentsDeclaration)


State 26

    6 Fonction: tINT tID tPO ArgumentsDeclaration tPF . tAO BodyRet tAF

    tAO  shift, and go to state 44


State 27

   13 Main: tVOID tMAIN tPO tPF tAO . Body tAF

    tINT     shift, and go to state 29
    tPRINTF  shift, and go to state 30
    tIF      shift, and go to state 31
    tWHILE   shift, and go to state 32
    tID      shift, and go to state 33

    $default  reduce using rule 19 (Body)

    Body            go to state 45
    Declaration     go to state 36
    Initialisation  go to state 37
    Affectation     go to state 38
    BrancheIf       go to state 39
    BrancheWhile    go to state 40
    Printf          go to state 41
    AppelFonction   go to state 42


State 28

    7 Fonction: tVOID tID tPO ArgumentsDeclaration tPF . tAO Body tAF

    tAO  shift, and go to state 46


State 29

   27 Declaration: tINT . tID tFI
   28 Initialisation: tINT . tID tEGAL Valeur tFI

    tID  shift, and go to state 47


State 30

   45 Printf: tPRINTF . tPO tG tID tG tPF tFI

    tPO  shift, and go to state 48


State 31

   30 BrancheIf: tIF . tPO Conditions tPF tAO Body tAF BranchesElseif

    tPO  shift, and go to state 49


State 32

   44 BrancheWhile: tWHILE . tPO Conditions tPF tAO Body tAF

    tPO  shift, and go to state 50


State 33

   29 Affectation: tID . tEGAL Valeur tFI
   46 AppelFonction: tID . tPO Arguments tPF

    tEGAL  shift, and go to state 51
    tPO    shift, and go to state 52


State 34

   12 Main: tINT tMAIN tPO tPF tAO BodyRet . tAF

    tAF  shift, and go to state 53


State 35

   18 BodyRet: Body . tRETURN Valeur tFI

    tRETURN  shift, and go to state 54


State 36

   20 Body: Declaration . Body

    tINT     shift, and go to state 29
    tPRINTF  shift, and go to state 30
    tIF      shift, and go to state 31
    tWHILE   shift, and go to state 32
    tID      shift, and go to state 33

    $default  reduce using rule 19 (Body)

    Body            go to state 55
    Declaration     go to state 36
    Initialisation  go to state 37
    Affectation     go to state 38
    BrancheIf       go to state 39
    BrancheWhile    go to state 40
    Printf          go to state 41
    AppelFonction   go to state 42


State 37

   21 Body: Initialisation . Body

    tINT     shift, and go to state 29
    tPRINTF  shift, and go to state 30
    tIF      shift, and go to state 31
    tWHILE   shift, and go to state 32
    tID      shift, and go to state 33

    $default  reduce using rule 19 (Body)

    Body            go to state 56
    Declaration     go to state 36
    Initialisation  go to state 37
    Affectation     go to state 38
    BrancheIf       go to state 39
    BrancheWhile    go to state 40
    Printf          go to state 41
    AppelFonction   go to state 42


State 38

   22 Body: Affectation . Body

    tINT     shift, and go to state 29
    tPRINTF  shift, and go to state 30
    tIF      shift, and go to state 31
    tWHILE   shift, and go to state 32
    tID      shift, and go to state 33

    $default  reduce using rule 19 (Body)

    Body            go to state 57
    Declaration     go to state 36
    Initialisation  go to state 37
    Affectation     go to state 38
    BrancheIf       go to state 39
    BrancheWhile    go to state 40
    Printf          go to state 41
    AppelFonction   go to state 42


State 39

   23 Body: BrancheIf . Body

    tINT     shift, and go to state 29
    tPRINTF  shift, and go to state 30
    tIF      shift, and go to state 31
    tWHILE   shift, and go to state 32
    tID      shift, and go to state 33

    $default  reduce using rule 19 (Body)

    Body            go to state 58
    Declaration     go to state 36
    Initialisation  go to state 37
    Affectation     go to state 38
    BrancheIf       go to state 39
    BrancheWhile    go to state 40
    Printf          go to state 41
    AppelFonction   go to state 42


State 40

   24 Body: BrancheWhile . Body

    tINT     shift, and go to state 29
    tPRINTF  shift, and go to state 30
    tIF      shift, and go to state 31
    tWHILE   shift, and go to state 32
    tID      shift, and go to state 33

    $default  reduce using rule 19 (Body)

    Body            go to state 59
    Declaration     go to state 36
    Initialisation  go to state 37
    Affectation     go to state 38
    BrancheIf       go to state 39
    BrancheWhile    go to state 40
    Printf          go to state 41
    AppelFonction   go to state 42


State 41

   25 Body: Printf . Body

    tINT     shift, and go to state 29
    tPRINTF  shift, and go to state 30
    tIF      shift, and go to state 31
    tWHILE   shift, and go to state 32
    tID      shift, and go to state 33

    $default  reduce using rule 19 (Body)

    Body            go to state 60
    Declaration     go to state 36
    Initialisation  go to state 37
    Affectation     go to state 38
    BrancheIf       go to state 39
    BrancheWhile    go to state 40
    Printf          go to state 41
    AppelFonction   go to state 42


State 42

   26 Body: AppelFonction . tFI Body

    tFI  shift, and go to state 61


State 43

   11 ListeArgumentsDeclaration: tINT tID tV . ListeArgumentsDeclaration

    tINT  shift, and go to state 19

    ListeArgumentsDeclaration  go to state 62


State 44

    6 Fonction: tINT tID tPO ArgumentsDeclaration tPF tAO . BodyRet tAF

    tINT     shift, and go to state 29
    tPRINTF  shift, and go to state 30
    tIF      shift, and go to state 31
    tWHILE   shift, and go to state 32
    tID      shift, and go to state 33

    $default  reduce using rule 19 (Body)

    BodyRet         go to state 63
    Body            go to state 35
    Declaration     go to state 36
    Initialisation  go to state 37
    Affectation     go to state 38
    BrancheIf       go to state 39
    BrancheWhile    go to state 40
    Printf          go to state 41
    AppelFonction   go to state 42


State 45

   13 Main: tVOID tMAIN tPO tPF tAO Body . tAF

    tAF  shift, and go to state 64


State 46

    7 Fonction: tVOID tID tPO ArgumentsDeclaration tPF tAO . Body tAF

    tINT     shift, and go to state 29
    tPRINTF  shift, and go to state 30
    tIF      shift, and go to state 31
    tWHILE   shift, and go to state 32
    tID      shift, and go to state 33

    $default  reduce using rule 19 (Body)

    Body            go to state 65
    Declaration     go to state 36
    Initialisation  go to state 37
    Affectation     go to state 38
    BrancheIf       go to state 39
    BrancheWhile    go to state 40
    Printf          go to state 41
    AppelFonction   go to state 42


State 47

   27 Declaration: tINT tID . tFI
   28 Initialisation: tINT tID . tEGAL Valeur tFI

    tEGAL  shift, and go to state 66
    tFI    shift, and go to state 67


State 48

   45 Printf: tPRINTF tPO . tG tID tG tPF tFI

    tG  shift, and go to state 68


State 49

   30 BrancheIf: tIF tPO . Conditions tPF tAO Body tAF BranchesElseif

    tPO  shift, and go to state 69
    tNB  shift, and go to state 70
    tID  shift, and go to state 71

    Valeur         go to state 72
    Conditions     go to state 73
    AppelFonction  go to state 74
    Calcul         go to state 75
    DivMul         go to state 76
    Terme          go to state 77


State 50

   44 BrancheWhile: tWHILE tPO . Conditions tPF tAO Body tAF

    tPO  shift, and go to state 69
    tNB  shift, and go to state 70
    tID  shift, and go to state 71

    Valeur         go to state 72
    Conditions     go to state 78
    AppelFonction  go to state 74
    Calcul         go to state 75
    DivMul         go to state 76
    Terme          go to state 77


State 51

   29 Affectation: tID tEGAL . Valeur tFI

    tPO  shift, and go to state 69
    tNB  shift, and go to state 70
    tID  shift, and go to state 71

    Valeur         go to state 79
    AppelFonction  go to state 74
    Calcul         go to state 75
    DivMul         go to state 76
    Terme          go to state 77


State 52

   46 AppelFonction: tID tPO . Arguments tPF

    tPO  shift, and go to state 69
    tNB  shift, and go to state 70
    tID  shift, and go to state 71

    $default  reduce using rule 47 (Arguments)

    Valeur          go to state 80
    AppelFonction   go to state 74
    Arguments       go to state 81
    ListeArguments  go to state 82
    Calcul          go to state 75
    DivMul          go to state 76
    Terme           go to state 77


State 53

   12 Main: tINT tMAIN tPO tPF tAO BodyRet tAF .

    $default  reduce using rule 12 (Main)


State 54

   18 BodyRet: Body tRETURN . Valeur tFI

    tPO  shift, and go to state 69
    tNB  shift, and go to state 70
    tID  shift, and go to state 71

    Valeur         go to state 83
    AppelFonction  go to state 74
    Calcul         go to state 75
    DivMul         go to state 76
    Terme          go to state 77


State 55

   20 Body: Declaration Body .

    $default  reduce using rule 20 (Body)


State 56

   21 Body: Initialisation Body .

    $default  reduce using rule 21 (Body)


State 57

   22 Body: Affectation Body .

    $default  reduce using rule 22 (Body)


State 58

   23 Body: BrancheIf Body .

    $default  reduce using rule 23 (Body)


State 59

   24 Body: BrancheWhile Body .

    $default  reduce using rule 24 (Body)


State 60

   25 Body: Printf Body .

    $default  reduce using rule 25 (Body)


State 61

   26 Body: AppelFonction tFI . Body

    tINT     shift, and go to state 29
    tPRINTF  shift, and go to state 30
    tIF      shift, and go to state 31
    tWHILE   shift, and go to state 32
    tID      shift, and go to state 33

    $default  reduce using rule 19 (Body)

    Body            go to state 84
    Declaration     go to state 36
    Initialisation  go to state 37
    Affectation     go to state 38
    BrancheIf       go to state 39
    BrancheWhile    go to state 40
    Printf          go to state 41
    AppelFonction   go to state 42


State 62

   11 ListeArgumentsDeclaration: tINT tID tV ListeArgumentsDeclaration .

    $default  reduce using rule 11 (ListeArgumentsDeclaration)


State 63

    6 Fonction: tINT tID tPO ArgumentsDeclaration tPF tAO BodyRet . tAF

    tAF  shift, and go to state 85


State 64

   13 Main: tVOID tMAIN tPO tPF tAO Body tAF .

    $default  reduce using rule 13 (Main)


State 65

    7 Fonction: tVOID tID tPO ArgumentsDeclaration tPF tAO Body . tAF

    tAF  shift, and go to state 86


State 66

   28 Initialisation: tINT tID tEGAL . Valeur tFI

    tPO  shift, and go to state 69
    tNB  shift, and go to state 70
    tID  shift, and go to state 71

    Valeur         go to state 87
    AppelFonction  go to state 74
    Calcul         go to state 75
    DivMul         go to state 76
    Terme          go to state 77


State 67

   27 Declaration: tINT tID tFI .

    $default  reduce using rule 27 (Declaration)


State 68

   45 Printf: tPRINTF tPO tG . tID tG tPF tFI

    tID  shift, and go to state 88


State 69

   57 Terme: tPO . Calcul tPF

    tPO  shift, and go to state 69
    tNB  shift, and go to state 89
    tID  shift, and go to state 90

    AppelFonction  go to state 91
    Calcul         go to state 92
    DivMul         go to state 76
    Terme          go to state 77


State 70

   15 Valeur: tNB .
   59 Terme: tNB .

    tEGAL     reduce using rule 15 (Valeur)
    tEGAL     [reduce using rule 59 (Terme)]
    tSOU      reduce using rule 59 (Terme)
    tADD      reduce using rule 59 (Terme)
    tMUL      reduce using rule 59 (Terme)
    tDIV      reduce using rule 59 (Terme)
    tPO       reduce using rule 15 (Valeur)
    tPO       [reduce using rule 59 (Terme)]
    tPF       reduce using rule 15 (Valeur)
    tPF       [reduce using rule 59 (Terme)]
    tV        reduce using rule 15 (Valeur)
    tV        [reduce using rule 59 (Terme)]
    tFI       reduce using rule 15 (Valeur)
    tFI       [reduce using rule 59 (Terme)]
    tINF      reduce using rule 15 (Valeur)
    tINF      [reduce using rule 59 (Terme)]
    tSUP      reduce using rule 15 (Valeur)
    tSUP      [reduce using rule 59 (Terme)]
    tSUPEGAL  reduce using rule 15 (Valeur)
    tSUPEGAL  [reduce using rule 59 (Terme)]
    tINFEGAL  reduce using rule 15 (Valeur)
    tINFEGAL  [reduce using rule 59 (Terme)]
    tDIF      reduce using rule 15 (Valeur)
    tDIF      [reduce using rule 59 (Terme)]
    tNB       reduce using rule 15 (Valeur)
    tNB       [reduce using rule 59 (Terme)]
    tID       reduce using rule 15 (Valeur)
    tID       [reduce using rule 59 (Terme)]
    $default  reduce using rule 15 (Valeur)


State 71

   14 Valeur: tID .
   46 AppelFonction: tID . tPO Arguments tPF
   58 Terme: tID .

    tPO  shift, and go to state 52

    tEGAL     reduce using rule 14 (Valeur)
    tEGAL     [reduce using rule 58 (Terme)]
    tSOU      reduce using rule 58 (Terme)
    tADD      reduce using rule 58 (Terme)
    tMUL      reduce using rule 58 (Terme)
    tDIV      reduce using rule 58 (Terme)
    tPO       [reduce using rule 14 (Valeur)]
    tPO       [reduce using rule 58 (Terme)]
    tPF       reduce using rule 14 (Valeur)
    tPF       [reduce using rule 58 (Terme)]
    tV        reduce using rule 14 (Valeur)
    tV        [reduce using rule 58 (Terme)]
    tFI       reduce using rule 14 (Valeur)
    tFI       [reduce using rule 58 (Terme)]
    tINF      reduce using rule 14 (Valeur)
    tINF      [reduce using rule 58 (Terme)]
    tSUP      reduce using rule 14 (Valeur)
    tSUP      [reduce using rule 58 (Terme)]
    tSUPEGAL  reduce using rule 14 (Valeur)
    tSUPEGAL  [reduce using rule 58 (Terme)]
    tINFEGAL  reduce using rule 14 (Valeur)
    tINFEGAL  [reduce using rule 58 (Terme)]
    tDIF      reduce using rule 14 (Valeur)
    tDIF      [reduce using rule 58 (Terme)]
    tNB       reduce using rule 14 (Valeur)
    tNB       [reduce using rule 58 (Terme)]
    tID       reduce using rule 14 (Valeur)
    tID       [reduce using rule 58 (Terme)]
    $default  reduce using rule 14 (Valeur)


State 72

   31 Conditions: Valeur . Comparateur Valeur
   32           | Valeur .
   33           | Valeur . Comparateur Valeur Conditions
   34           | Valeur . Conditions

    tEGAL     shift, and go to state 93
    tPO       shift, and go to state 69
    tINF      shift, and go to state 94
    tSUP      shift, and go to state 95
    tSUPEGAL  shift, and go to state 96
    tINFEGAL  shift, and go to state 97
    tDIF      shift, and go to state 98
    tNB       shift, and go to state 70
    tID       shift, and go to state 71

    $default  reduce using rule 32 (Conditions)

    Valeur         go to state 72
    Conditions     go to state 99
    Comparateur    go to state 100
    AppelFonction  go to state 74
    Calcul         go to state 75
    DivMul         go to state 76
    Terme          go to state 77


State 73

   30 BrancheIf: tIF tPO Conditions . tPF tAO Body tAF BranchesElseif

    tPF  shift, and go to state 101


State 74

   17 Valeur: AppelFonction .
   60 Terme: AppelFonction .

    tEGAL     reduce using rule 17 (Valeur)
    tEGAL     [reduce using rule 60 (Terme)]
    tSOU      reduce using rule 60 (Terme)
    tADD      reduce using rule 60 (Terme)
    tMUL      reduce using rule 60 (Terme)
    tDIV      reduce using rule 60 (Terme)
    tPO       reduce using rule 17 (Valeur)
    tPO       [reduce using rule 60 (Terme)]
    tPF       reduce using rule 17 (Valeur)
    tPF       [reduce using rule 60 (Terme)]
    tV        reduce using rule 17 (Valeur)
    tV        [reduce using rule 60 (Terme)]
    tFI       reduce using rule 17 (Valeur)
    tFI       [reduce using rule 60 (Terme)]
    tINF      reduce using rule 17 (Valeur)
    tINF      [reduce using rule 60 (Terme)]
    tSUP      reduce using rule 17 (Valeur)
    tSUP      [reduce using rule 60 (Terme)]
    tSUPEGAL  reduce using rule 17 (Valeur)
    tSUPEGAL  [reduce using rule 60 (Terme)]
    tINFEGAL  reduce using rule 17 (Valeur)
    tINFEGAL  [reduce using rule 60 (Terme)]
    tDIF      reduce using rule 17 (Valeur)
    tDIF      [reduce using rule 60 (Terme)]
    tNB       reduce using rule 17 (Valeur)
    tNB       [reduce using rule 60 (Terme)]
    tID       reduce using rule 17 (Valeur)
    tID       [reduce using rule 60 (Terme)]
    $default  reduce using rule 17 (Valeur)


State 75

   16 Valeur: Calcul .
   51 Calcul: Calcul . tADD DivMul
   52       | Calcul . tSOU DivMul

    tSOU  shift, and go to state 102
    tADD  shift, and go to state 103

    $default  reduce using rule 16 (Valeur)


State 76

   53 Calcul: DivMul .
   54 DivMul: DivMul . tMUL Terme
   55       | DivMul . tDIV Terme

    tMUL  shift, and go to state 104
    tDIV  shift, and go to state 105

    $default  reduce using rule 53 (Calcul)


State 77

   56 DivMul: Terme .

    $default  reduce using rule 56 (DivMul)


State 78

   44 BrancheWhile: tWHILE tPO Conditions . tPF tAO Body tAF

    tPF  shift, and go to state 106


State 79

   29 Affectation: tID tEGAL Valeur . tFI

    tFI  shift, and go to state 107


State 80

   49 ListeArguments: Valeur .
   50               | Valeur . tV ListeArguments

    tV  shift, and go to state 108

    $default  reduce using rule 49 (ListeArguments)


State 81

   46 AppelFonction: tID tPO Arguments . tPF

    tPF  shift, and go to state 109


State 82

   48 Arguments: ListeArguments .

    $default  reduce using rule 48 (Arguments)


State 83

   18 BodyRet: Body tRETURN Valeur . tFI

    tFI  shift, and go to state 110


State 84

   26 Body: AppelFonction tFI Body .

    $default  reduce using rule 26 (Body)


State 85

    6 Fonction: tINT tID tPO ArgumentsDeclaration tPF tAO BodyRet tAF .

    $default  reduce using rule 6 (Fonction)


State 86

    7 Fonction: tVOID tID tPO ArgumentsDeclaration tPF tAO Body tAF .

    $default  reduce using rule 7 (Fonction)


State 87

   28 Initialisation: tINT tID tEGAL Valeur . tFI

    tFI  shift, and go to state 111


State 88

   45 Printf: tPRINTF tPO tG tID . tG tPF tFI

    tG  shift, and go to state 112


State 89

   59 Terme: tNB .

    $default  reduce using rule 59 (Terme)


State 90

   46 AppelFonction: tID . tPO Arguments tPF
   58 Terme: tID .

    tPO  shift, and go to state 52

    tPO       [reduce using rule 58 (Terme)]
    $default  reduce using rule 58 (Terme)


State 91

   60 Terme: AppelFonction .

    $default  reduce using rule 60 (Terme)


State 92

   51 Calcul: Calcul . tADD DivMul
   52       | Calcul . tSOU DivMul
   57 Terme: tPO Calcul . tPF

    tSOU  shift, and go to state 102
    tADD  shift, and go to state 103
    tPF   shift, and go to state 113


State 93

   35 Comparateur: tEGAL .

    $default  reduce using rule 35 (Comparateur)


State 94

   36 Comparateur: tINF .

    $default  reduce using rule 36 (Comparateur)


State 95

   37 Comparateur: tSUP .

    $default  reduce using rule 37 (Comparateur)


State 96

   39 Comparateur: tSUPEGAL .

    $default  reduce using rule 39 (Comparateur)


State 97

   38 Comparateur: tINFEGAL .

    $default  reduce using rule 38 (Comparateur)


State 98

   40 Comparateur: tDIF .

    $default  reduce using rule 40 (Comparateur)


State 99

   34 Conditions: Valeur Conditions .

    $default  reduce using rule 34 (Conditions)


State 100

   31 Conditions: Valeur Comparateur . Valeur
   33           | Valeur Comparateur . Valeur Conditions

    tPO  shift, and go to state 69
    tNB  shift, and go to state 70
    tID  shift, and go to state 71

    Valeur         go to state 114
    AppelFonction  go to state 74
    Calcul         go to state 75
    DivMul         go to state 76
    Terme          go to state 77


State 101

   30 BrancheIf: tIF tPO Conditions tPF . tAO Body tAF BranchesElseif

    tAO  shift, and go to state 115


State 102

   52 Calcul: Calcul tSOU . DivMul

    tPO  shift, and go to state 69
    tNB  shift, and go to state 89
    tID  shift, and go to state 90

    AppelFonction  go to state 91
    DivMul         go to state 116
    Terme          go to state 77


State 103

   51 Calcul: Calcul tADD . DivMul

    tPO  shift, and go to state 69
    tNB  shift, and go to state 89
    tID  shift, and go to state 90

    AppelFonction  go to state 91
    DivMul         go to state 117
    Terme          go to state 77


State 104

   54 DivMul: DivMul tMUL . Terme

    tPO  shift, and go to state 69
    tNB  shift, and go to state 89
    tID  shift, and go to state 90

    AppelFonction  go to state 91
    Terme          go to state 118


State 105

   55 DivMul: DivMul tDIV . Terme

    tPO  shift, and go to state 69
    tNB  shift, and go to state 89
    tID  shift, and go to state 90

    AppelFonction  go to state 91
    Terme          go to state 119


State 106

   44 BrancheWhile: tWHILE tPO Conditions tPF . tAO Body tAF

    tAO  shift, and go to state 120


State 107

   29 Affectation: tID tEGAL Valeur tFI .

    $default  reduce using rule 29 (Affectation)


State 108

   50 ListeArguments: Valeur tV . ListeArguments

    tPO  shift, and go to state 69
    tNB  shift, and go to state 70
    tID  shift, and go to state 71

    Valeur          go to state 80
    AppelFonction   go to state 74
    ListeArguments  go to state 121
    Calcul          go to state 75
    DivMul          go to state 76
    Terme           go to state 77


State 109

   46 AppelFonction: tID tPO Arguments tPF .

    $default  reduce using rule 46 (AppelFonction)


State 110

   18 BodyRet: Body tRETURN Valeur tFI .

    $default  reduce using rule 18 (BodyRet)


State 111

   28 Initialisation: tINT tID tEGAL Valeur tFI .

    $default  reduce using rule 28 (Initialisation)


State 112

   45 Printf: tPRINTF tPO tG tID tG . tPF tFI

    tPF  shift, and go to state 122


State 113

   57 Terme: tPO Calcul tPF .

    $default  reduce using rule 57 (Terme)


State 114

   31 Conditions: Valeur Comparateur Valeur .
   33           | Valeur Comparateur Valeur . Conditions

    tPO  shift, and go to state 69
    tNB  shift, and go to state 70
    tID  shift, and go to state 71

    $default  reduce using rule 31 (Conditions)

    Valeur         go to state 72
    Conditions     go to state 123
    AppelFonction  go to state 74
    Calcul         go to state 75
    DivMul         go to state 76
    Terme          go to state 77


State 115

   30 BrancheIf: tIF tPO Conditions tPF tAO . Body tAF BranchesElseif

    tINT     shift, and go to state 29
    tPRINTF  shift, and go to state 30
    tIF      shift, and go to state 31
    tWHILE   shift, and go to state 32
    tID      shift, and go to state 33

    $default  reduce using rule 19 (Body)

    Body            go to state 124
    Declaration     go to state 36
    Initialisation  go to state 37
    Affectation     go to state 38
    BrancheIf       go to state 39
    BrancheWhile    go to state 40
    Printf          go to state 41
    AppelFonction   go to state 42


State 116

   52 Calcul: Calcul tSOU DivMul .
   54 DivMul: DivMul . tMUL Terme
   55       | DivMul . tDIV Terme

    tMUL  shift, and go to state 104
    tDIV  shift, and go to state 105

    $default  reduce using rule 52 (Calcul)


State 117

   51 Calcul: Calcul tADD DivMul .
   54 DivMul: DivMul . tMUL Terme
   55       | DivMul . tDIV Terme

    tMUL  shift, and go to state 104
    tDIV  shift, and go to state 105

    $default  reduce using rule 51 (Calcul)


State 118

   54 DivMul: DivMul tMUL Terme .

    $default  reduce using rule 54 (DivMul)


State 119

   55 DivMul: DivMul tDIV Terme .

    $default  reduce using rule 55 (DivMul)


State 120

   44 BrancheWhile: tWHILE tPO Conditions tPF tAO . Body tAF

    tINT     shift, and go to state 29
    tPRINTF  shift, and go to state 30
    tIF      shift, and go to state 31
    tWHILE   shift, and go to state 32
    tID      shift, and go to state 33

    $default  reduce using rule 19 (Body)

    Body            go to state 125
    Declaration     go to state 36
    Initialisation  go to state 37
    Affectation     go to state 38
    BrancheIf       go to state 39
    BrancheWhile    go to state 40
    Printf          go to state 41
    AppelFonction   go to state 42


State 121

   50 ListeArguments: Valeur tV ListeArguments .

    $default  reduce using rule 50 (ListeArguments)


State 122

   45 Printf: tPRINTF tPO tG tID tG tPF . tFI

    tFI  shift, and go to state 126


State 123

   33 Conditions: Valeur Comparateur Valeur Conditions .

    $default  reduce using rule 33 (Conditions)


State 124

   30 BrancheIf: tIF tPO Conditions tPF tAO Body . tAF BranchesElseif

    tAF  shift, and go to state 127


State 125

   44 BrancheWhile: tWHILE tPO Conditions tPF tAO Body . tAF

    tAF  shift, and go to state 128


State 126

   45 Printf: tPRINTF tPO tG tID tG tPF tFI .

    $default  reduce using rule 45 (Printf)


State 127

   30 BrancheIf: tIF tPO Conditions tPF tAO Body tAF . BranchesElseif

    tELSE  shift, and go to state 129

    $default  reduce using rule 41 (BranchesElseif)

    BranchesElseif  go to state 130


State 128

   44 BrancheWhile: tWHILE tPO Conditions tPF tAO Body tAF .

    $default  reduce using rule 44 (BrancheWhile)


State 129

   42 BranchesElseif: tELSE . tIF tPO Conditions tPF tAO Body tAF BranchesElseif
   43               | tELSE . tAO Body tAF

    tAO  shift, and go to state 131
    tIF  shift, and go to state 132


State 130

   30 BrancheIf: tIF tPO Conditions tPF tAO Body tAF BranchesElseif .

    $default  reduce using rule 30 (BrancheIf)


State 131

   43 BranchesElseif: tELSE tAO . Body tAF

    tINT     shift, and go to state 29
    tPRINTF  shift, and go to state 30
    tIF      shift, and go to state 31
    tWHILE   shift, and go to state 32
    tID      shift, and go to state 33

    $default  reduce using rule 19 (Body)

    Body            go to state 133
    Declaration     go to state 36
    Initialisation  go to state 37
    Affectation     go to state 38
    BrancheIf       go to state 39
    BrancheWhile    go to state 40
    Printf          go to state 41
    AppelFonction   go to state 42


State 132

   42 BranchesElseif: tELSE tIF . tPO Conditions tPF tAO Body tAF BranchesElseif

    tPO  shift, and go to state 134


State 133

   43 BranchesElseif: tELSE tAO Body . tAF

    tAF  shift, and go to state 135


State 134

   42 BranchesElseif: tELSE tIF tPO . Conditions tPF tAO Body tAF BranchesElseif

    tPO  shift, and go to state 69
    tNB  shift, and go to state 70
    tID  shift, and go to state 71

    Valeur         go to state 72
    Conditions     go to state 136
    AppelFonction  go to state 74
    Calcul         go to state 75
    DivMul         go to state 76
    Terme          go to state 77


State 135

   43 BranchesElseif: tELSE tAO Body tAF .

    $default  reduce using rule 43 (BranchesElseif)


State 136

   42 BranchesElseif: tELSE tIF tPO Conditions . tPF tAO Body tAF BranchesElseif

    tPF  shift, and go to state 137


State 137

   42 BranchesElseif: tELSE tIF tPO Conditions tPF . tAO Body tAF BranchesElseif

    tAO  shift, and go to state 138


State 138

   42 BranchesElseif: tELSE tIF tPO Conditions tPF tAO . Body tAF BranchesElseif

    tINT     shift, and go to state 29
    tPRINTF  shift, and go to state 30
    tIF      shift, and go to state 31
    tWHILE   shift, and go to state 32
    tID      shift, and go to state 33

    $default  reduce using rule 19 (Body)

    Body            go to state 139
    Declaration     go to state 36
    Initialisation  go to state 37
    Affectation     go to state 38
    BrancheIf       go to state 39
    BrancheWhile    go to state 40
    Printf          go to state 41
    AppelFonction   go to state 42


State 139

   42 BranchesElseif: tELSE tIF tPO Conditions tPF tAO Body . tAF BranchesElseif

    tAF  shift, and go to state 140


State 140

   42 BranchesElseif: tELSE tIF tPO Conditions tPF tAO Body tAF . BranchesElseif

    tELSE  shift, and go to state 129

    $default  reduce using rule 41 (BranchesElseif)

    BranchesElseif  go to state 141


State 141

   42 BranchesElseif: tELSE tIF tPO Conditions tPF tAO Body tAF BranchesElseif .

    $default  reduce using rule 42 (BranchesElseif)
