Terminals unused in grammar

    tCONST
    tERROR


State 72 conflicts: 1 shift/reduce


Grammar

    0 $accept: Programme $end

    1 Programme: Fonctions

    2 Fonctions: Fonctions Main
    3          | Main
    4          | Fonctions Fonction
    5          | Fonction

    6 Fonction: tINT tID tPO ArgumentsDeclaration tPF tAO BodyRet tAF
    7         | tVOID tID tPO ArgumentsDeclaration tPF tAO Body tAF

    8 ArgumentsDeclaration: %empty
    9                     | ListeArgumentsDeclaration

   10 ListeArgumentsDeclaration: tINT tID
   11                          | tINT tID tV ListeArgumentsDeclaration

   12 Main: tINT tMAIN tPO tPF tAO BodyRet tAF
   13     | tVOID tMAIN tPO tPF tAO Body tAF
   14     | tMAIN tPO tPF tAO Body tAF

   15 BodyRet: Body tRETURN Calcul tFI

   16 Body: %empty
   17     | Declaration Body
   18     | Initialisation Body
   19     | Affectation Body
   20     | BrancheIf Body
   21     | BrancheWhile Body
   22     | Printf Body
   23     | AppelFonction tFI Body

   24 Declaration: tINT tID tFI

   25 Initialisation: tINT Parametre tEGAL Calcul tFI

   26 Parametre: tID

   27 Affectation: tID tEGAL Calcul tFI

   28 BrancheIf: tIF tPO Conditions tPF tAO Body tAF BranchesElseif

   29 Conditions: Calcul Comparateur Calcul
   30           | Calcul
   31           | Calcul Comparateur Calcul Conditions
   32           | Calcul Conditions

   33 Comparateur: tEGAL tEGAL
   34            | tINF
   35            | tSUP
   36            | tINFEGAL
   37            | tSUPEGAL
   38            | tDIF

   39 BranchesElseif: %empty
   40               | tELSE tIF tPO Conditions tPF tAO Body tAF BranchesElseif
   41               | tELSE tAO Body tAF

   42 BrancheWhile: tWHILE tPO Conditions tPF tAO Body tAF

   43 Printf: tPRINTF tPO tG tID tG tPF tFI

   44 AppelFonction: tID tPO Arguments tPF

   45 Arguments: %empty
   46          | ListeArguments

   47 ListeArguments: Calcul
   48               | Calcul tV ListeArguments

   49 Calcul: Calcul tADD DivMul
   50       | Calcul tSOU DivMul
   51       | DivMul

   52 DivMul: DivMul tMUL Terme
   53       | DivMul tDIV Terme
   54       | Terme

   55 Terme: tPO Calcul tPF
   56      | tID
   57      | tNB
   58      | AppelFonction


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    tMAIN (258) 12 13 14
    tAO (259) 6 7 12 13 14 28 40 41 42
    tAF (260) 6 7 12 13 14 28 40 41 42
    tCONST (261)
    tINT (262) 6 10 11 12 24 25
    tEGAL (263) 25 27 33
    tSOU (264) 50
    tADD (265) 49
    tMUL (266) 52
    tDIV (267) 53
    tPO (268) 6 7 12 13 14 28 40 42 43 44 55
    tPF (269) 6 7 12 13 14 28 40 42 43 44 55
    tV (270) 11 48
    tFI (271) 15 23 24 25 27 43
    tPRINTF (272) 43
    tIF (273) 28 40
    tELSE (274) 40 41
    tWHILE (275) 42
    tERROR (276)
    tRETURN (277) 15
    tVOID (278) 7 13
    tINF (279) 34
    tSUP (280) 35
    tSUPEGAL (281) 37
    tINFEGAL (282) 36
    tDIF (283) 38
    tG (284) 43
    tNB <nb> (285) 57
    tID <var> (286) 6 7 10 11 24 26 27 43 44 56


Nonterminals, with rules where they appear

    $accept (32)
        on left: 0
    Programme (33)
        on left: 1
        on right: 0
    Fonctions (34)
        on left: 2 3 4 5
        on right: 1 2 4
    Fonction (35)
        on left: 6 7
        on right: 4 5
    ArgumentsDeclaration (36)
        on left: 8 9
        on right: 6 7
    ListeArgumentsDeclaration (37)
        on left: 10 11
        on right: 9 11
    Main (38)
        on left: 12 13 14
        on right: 2 3
    BodyRet (39)
        on left: 15
        on right: 6 12
    Body (40)
        on left: 16 17 18 19 20 21 22 23
        on right: 7 13 14 15 17 18 19 20 21 22 23 28 40 41 42
    Declaration (41)
        on left: 24
        on right: 17
    Initialisation (42)
        on left: 25
        on right: 18
    Parametre <var> (43)
        on left: 26
        on right: 25
    Affectation (44)
        on left: 27
        on right: 19
    BrancheIf (45)
        on left: 28
        on right: 20
    Conditions (46)
        on left: 29 30 31 32
        on right: 28 31 32 40 42
    Comparateur (47)
        on left: 33 34 35 36 37 38
        on right: 29 31
    BranchesElseif (48)
        on left: 39 40 41
        on right: 28 40
    BrancheWhile (49)
        on left: 42
        on right: 21
    Printf (50)
        on left: 43
        on right: 22
    AppelFonction <nb> (51)
        on left: 44
        on right: 23 58
    Arguments (52)
        on left: 45 46
        on right: 44
    ListeArguments (53)
        on left: 47 48
        on right: 46 48
    Calcul <nb> (54)
        on left: 49 50 51
        on right: 15 25 27 29 30 31 32 47 48 49 50 55
    DivMul <nb> (55)
        on left: 52 53 54
        on right: 49 50 51 52 53
    Terme <nb> (56)
        on left: 55 56 57 58
        on right: 52 53 54


State 0

    0 $accept: . Programme $end

    tMAIN  shift, and go to state 1
    tINT   shift, and go to state 2
    tVOID  shift, and go to state 3

    Programme  go to state 4
    Fonctions  go to state 5
    Fonction   go to state 6
    Main       go to state 7


State 1

   14 Main: tMAIN . tPO tPF tAO Body tAF

    tPO  shift, and go to state 8


State 2

    6 Fonction: tINT . tID tPO ArgumentsDeclaration tPF tAO BodyRet tAF
   12 Main: tINT . tMAIN tPO tPF tAO BodyRet tAF

    tMAIN  shift, and go to state 9
    tID    shift, and go to state 10


State 3

    7 Fonction: tVOID . tID tPO ArgumentsDeclaration tPF tAO Body tAF
   13 Main: tVOID . tMAIN tPO tPF tAO Body tAF

    tMAIN  shift, and go to state 11
    tID    shift, and go to state 12


State 4

    0 $accept: Programme . $end

    $end  shift, and go to state 13


State 5

    1 Programme: Fonctions .
    2 Fonctions: Fonctions . Main
    4          | Fonctions . Fonction

    tMAIN  shift, and go to state 1
    tINT   shift, and go to state 2
    tVOID  shift, and go to state 3

    $default  reduce using rule 1 (Programme)

    Fonction  go to state 14
    Main      go to state 15


State 6

    5 Fonctions: Fonction .

    $default  reduce using rule 5 (Fonctions)


State 7

    3 Fonctions: Main .

    $default  reduce using rule 3 (Fonctions)


State 8

   14 Main: tMAIN tPO . tPF tAO Body tAF

    tPF  shift, and go to state 16


State 9

   12 Main: tINT tMAIN . tPO tPF tAO BodyRet tAF

    tPO  shift, and go to state 17


State 10

    6 Fonction: tINT tID . tPO ArgumentsDeclaration tPF tAO BodyRet tAF

    tPO  shift, and go to state 18


State 11

   13 Main: tVOID tMAIN . tPO tPF tAO Body tAF

    tPO  shift, and go to state 19


State 12

    7 Fonction: tVOID tID . tPO ArgumentsDeclaration tPF tAO Body tAF

    tPO  shift, and go to state 20


State 13

    0 $accept: Programme $end .

    $default  accept


State 14

    4 Fonctions: Fonctions Fonction .

    $default  reduce using rule 4 (Fonctions)


State 15

    2 Fonctions: Fonctions Main .

    $default  reduce using rule 2 (Fonctions)


State 16

   14 Main: tMAIN tPO tPF . tAO Body tAF

    tAO  shift, and go to state 21


State 17

   12 Main: tINT tMAIN tPO . tPF tAO BodyRet tAF

    tPF  shift, and go to state 22


State 18

    6 Fonction: tINT tID tPO . ArgumentsDeclaration tPF tAO BodyRet tAF

    tINT  shift, and go to state 23

    $default  reduce using rule 8 (ArgumentsDeclaration)

    ArgumentsDeclaration       go to state 24
    ListeArgumentsDeclaration  go to state 25


State 19

   13 Main: tVOID tMAIN tPO . tPF tAO Body tAF

    tPF  shift, and go to state 26


State 20

    7 Fonction: tVOID tID tPO . ArgumentsDeclaration tPF tAO Body tAF

    tINT  shift, and go to state 23

    $default  reduce using rule 8 (ArgumentsDeclaration)

    ArgumentsDeclaration       go to state 27
    ListeArgumentsDeclaration  go to state 25


State 21

   14 Main: tMAIN tPO tPF tAO . Body tAF

    tINT     shift, and go to state 28
    tPRINTF  shift, and go to state 29
    tIF      shift, and go to state 30
    tWHILE   shift, and go to state 31
    tID      shift, and go to state 32

    $default  reduce using rule 16 (Body)

    Body            go to state 33
    Declaration     go to state 34
    Initialisation  go to state 35
    Affectation     go to state 36
    BrancheIf       go to state 37
    BrancheWhile    go to state 38
    Printf          go to state 39
    AppelFonction   go to state 40


State 22

   12 Main: tINT tMAIN tPO tPF . tAO BodyRet tAF

    tAO  shift, and go to state 41


State 23

   10 ListeArgumentsDeclaration: tINT . tID
   11                          | tINT . tID tV ListeArgumentsDeclaration

    tID  shift, and go to state 42


State 24

    6 Fonction: tINT tID tPO ArgumentsDeclaration . tPF tAO BodyRet tAF

    tPF  shift, and go to state 43


State 25

    9 ArgumentsDeclaration: ListeArgumentsDeclaration .

    $default  reduce using rule 9 (ArgumentsDeclaration)


State 26

   13 Main: tVOID tMAIN tPO tPF . tAO Body tAF

    tAO  shift, and go to state 44


State 27

    7 Fonction: tVOID tID tPO ArgumentsDeclaration . tPF tAO Body tAF

    tPF  shift, and go to state 45


State 28

   24 Declaration: tINT . tID tFI
   25 Initialisation: tINT . Parametre tEGAL Calcul tFI

    tID  shift, and go to state 46

    Parametre  go to state 47


State 29

   43 Printf: tPRINTF . tPO tG tID tG tPF tFI

    tPO  shift, and go to state 48


State 30

   28 BrancheIf: tIF . tPO Conditions tPF tAO Body tAF BranchesElseif

    tPO  shift, and go to state 49


State 31

   42 BrancheWhile: tWHILE . tPO Conditions tPF tAO Body tAF

    tPO  shift, and go to state 50


State 32

   27 Affectation: tID . tEGAL Calcul tFI
   44 AppelFonction: tID . tPO Arguments tPF

    tEGAL  shift, and go to state 51
    tPO    shift, and go to state 52


State 33

   14 Main: tMAIN tPO tPF tAO Body . tAF

    tAF  shift, and go to state 53


State 34

   17 Body: Declaration . Body

    tINT     shift, and go to state 28
    tPRINTF  shift, and go to state 29
    tIF      shift, and go to state 30
    tWHILE   shift, and go to state 31
    tID      shift, and go to state 32

    $default  reduce using rule 16 (Body)

    Body            go to state 54
    Declaration     go to state 34
    Initialisation  go to state 35
    Affectation     go to state 36
    BrancheIf       go to state 37
    BrancheWhile    go to state 38
    Printf          go to state 39
    AppelFonction   go to state 40


State 35

   18 Body: Initialisation . Body

    tINT     shift, and go to state 28
    tPRINTF  shift, and go to state 29
    tIF      shift, and go to state 30
    tWHILE   shift, and go to state 31
    tID      shift, and go to state 32

    $default  reduce using rule 16 (Body)

    Body            go to state 55
    Declaration     go to state 34
    Initialisation  go to state 35
    Affectation     go to state 36
    BrancheIf       go to state 37
    BrancheWhile    go to state 38
    Printf          go to state 39
    AppelFonction   go to state 40


State 36

   19 Body: Affectation . Body

    tINT     shift, and go to state 28
    tPRINTF  shift, and go to state 29
    tIF      shift, and go to state 30
    tWHILE   shift, and go to state 31
    tID      shift, and go to state 32

    $default  reduce using rule 16 (Body)

    Body            go to state 56
    Declaration     go to state 34
    Initialisation  go to state 35
    Affectation     go to state 36
    BrancheIf       go to state 37
    BrancheWhile    go to state 38
    Printf          go to state 39
    AppelFonction   go to state 40


State 37

   20 Body: BrancheIf . Body

    tINT     shift, and go to state 28
    tPRINTF  shift, and go to state 29
    tIF      shift, and go to state 30
    tWHILE   shift, and go to state 31
    tID      shift, and go to state 32

    $default  reduce using rule 16 (Body)

    Body            go to state 57
    Declaration     go to state 34
    Initialisation  go to state 35
    Affectation     go to state 36
    BrancheIf       go to state 37
    BrancheWhile    go to state 38
    Printf          go to state 39
    AppelFonction   go to state 40


State 38

   21 Body: BrancheWhile . Body

    tINT     shift, and go to state 28
    tPRINTF  shift, and go to state 29
    tIF      shift, and go to state 30
    tWHILE   shift, and go to state 31
    tID      shift, and go to state 32

    $default  reduce using rule 16 (Body)

    Body            go to state 58
    Declaration     go to state 34
    Initialisation  go to state 35
    Affectation     go to state 36
    BrancheIf       go to state 37
    BrancheWhile    go to state 38
    Printf          go to state 39
    AppelFonction   go to state 40


State 39

   22 Body: Printf . Body

    tINT     shift, and go to state 28
    tPRINTF  shift, and go to state 29
    tIF      shift, and go to state 30
    tWHILE   shift, and go to state 31
    tID      shift, and go to state 32

    $default  reduce using rule 16 (Body)

    Body            go to state 59
    Declaration     go to state 34
    Initialisation  go to state 35
    Affectation     go to state 36
    BrancheIf       go to state 37
    BrancheWhile    go to state 38
    Printf          go to state 39
    AppelFonction   go to state 40


State 40

   23 Body: AppelFonction . tFI Body

    tFI  shift, and go to state 60


State 41

   12 Main: tINT tMAIN tPO tPF tAO . BodyRet tAF

    tINT     shift, and go to state 28
    tPRINTF  shift, and go to state 29
    tIF      shift, and go to state 30
    tWHILE   shift, and go to state 31
    tID      shift, and go to state 32

    $default  reduce using rule 16 (Body)

    BodyRet         go to state 61
    Body            go to state 62
    Declaration     go to state 34
    Initialisation  go to state 35
    Affectation     go to state 36
    BrancheIf       go to state 37
    BrancheWhile    go to state 38
    Printf          go to state 39
    AppelFonction   go to state 40


State 42

   10 ListeArgumentsDeclaration: tINT tID .
   11                          | tINT tID . tV ListeArgumentsDeclaration

    tV  shift, and go to state 63

    $default  reduce using rule 10 (ListeArgumentsDeclaration)


State 43

    6 Fonction: tINT tID tPO ArgumentsDeclaration tPF . tAO BodyRet tAF

    tAO  shift, and go to state 64


State 44

   13 Main: tVOID tMAIN tPO tPF tAO . Body tAF

    tINT     shift, and go to state 28
    tPRINTF  shift, and go to state 29
    tIF      shift, and go to state 30
    tWHILE   shift, and go to state 31
    tID      shift, and go to state 32

    $default  reduce using rule 16 (Body)

    Body            go to state 65
    Declaration     go to state 34
    Initialisation  go to state 35
    Affectation     go to state 36
    BrancheIf       go to state 37
    BrancheWhile    go to state 38
    Printf          go to state 39
    AppelFonction   go to state 40


State 45

    7 Fonction: tVOID tID tPO ArgumentsDeclaration tPF . tAO Body tAF

    tAO  shift, and go to state 66


State 46

   24 Declaration: tINT tID . tFI
   26 Parametre: tID .

    tFI  shift, and go to state 67

    $default  reduce using rule 26 (Parametre)


State 47

   25 Initialisation: tINT Parametre . tEGAL Calcul tFI

    tEGAL  shift, and go to state 68


State 48

   43 Printf: tPRINTF tPO . tG tID tG tPF tFI

    tG  shift, and go to state 69


State 49

   28 BrancheIf: tIF tPO . Conditions tPF tAO Body tAF BranchesElseif

    tPO  shift, and go to state 70
    tNB  shift, and go to state 71
    tID  shift, and go to state 72

    Conditions     go to state 73
    AppelFonction  go to state 74
    Calcul         go to state 75
    DivMul         go to state 76
    Terme          go to state 77


State 50

   42 BrancheWhile: tWHILE tPO . Conditions tPF tAO Body tAF

    tPO  shift, and go to state 70
    tNB  shift, and go to state 71
    tID  shift, and go to state 72

    Conditions     go to state 78
    AppelFonction  go to state 74
    Calcul         go to state 75
    DivMul         go to state 76
    Terme          go to state 77


State 51

   27 Affectation: tID tEGAL . Calcul tFI

    tPO  shift, and go to state 70
    tNB  shift, and go to state 71
    tID  shift, and go to state 72

    AppelFonction  go to state 74
    Calcul         go to state 79
    DivMul         go to state 76
    Terme          go to state 77


State 52

   44 AppelFonction: tID tPO . Arguments tPF

    tPO  shift, and go to state 70
    tNB  shift, and go to state 71
    tID  shift, and go to state 72

    $default  reduce using rule 45 (Arguments)

    AppelFonction   go to state 74
    Arguments       go to state 80
    ListeArguments  go to state 81
    Calcul          go to state 82
    DivMul          go to state 76
    Terme           go to state 77


State 53

   14 Main: tMAIN tPO tPF tAO Body tAF .

    $default  reduce using rule 14 (Main)


State 54

   17 Body: Declaration Body .

    $default  reduce using rule 17 (Body)


State 55

   18 Body: Initialisation Body .

    $default  reduce using rule 18 (Body)


State 56

   19 Body: Affectation Body .

    $default  reduce using rule 19 (Body)


State 57

   20 Body: BrancheIf Body .

    $default  reduce using rule 20 (Body)


State 58

   21 Body: BrancheWhile Body .

    $default  reduce using rule 21 (Body)


State 59

   22 Body: Printf Body .

    $default  reduce using rule 22 (Body)


State 60

   23 Body: AppelFonction tFI . Body

    tINT     shift, and go to state 28
    tPRINTF  shift, and go to state 29
    tIF      shift, and go to state 30
    tWHILE   shift, and go to state 31
    tID      shift, and go to state 32

    $default  reduce using rule 16 (Body)

    Body            go to state 83
    Declaration     go to state 34
    Initialisation  go to state 35
    Affectation     go to state 36
    BrancheIf       go to state 37
    BrancheWhile    go to state 38
    Printf          go to state 39
    AppelFonction   go to state 40


State 61

   12 Main: tINT tMAIN tPO tPF tAO BodyRet . tAF

    tAF  shift, and go to state 84


State 62

   15 BodyRet: Body . tRETURN Calcul tFI

    tRETURN  shift, and go to state 85


State 63

   11 ListeArgumentsDeclaration: tINT tID tV . ListeArgumentsDeclaration

    tINT  shift, and go to state 23

    ListeArgumentsDeclaration  go to state 86


State 64

    6 Fonction: tINT tID tPO ArgumentsDeclaration tPF tAO . BodyRet tAF

    tINT     shift, and go to state 28
    tPRINTF  shift, and go to state 29
    tIF      shift, and go to state 30
    tWHILE   shift, and go to state 31
    tID      shift, and go to state 32

    $default  reduce using rule 16 (Body)

    BodyRet         go to state 87
    Body            go to state 62
    Declaration     go to state 34
    Initialisation  go to state 35
    Affectation     go to state 36
    BrancheIf       go to state 37
    BrancheWhile    go to state 38
    Printf          go to state 39
    AppelFonction   go to state 40


State 65

   13 Main: tVOID tMAIN tPO tPF tAO Body . tAF

    tAF  shift, and go to state 88


State 66

    7 Fonction: tVOID tID tPO ArgumentsDeclaration tPF tAO . Body tAF

    tINT     shift, and go to state 28
    tPRINTF  shift, and go to state 29
    tIF      shift, and go to state 30
    tWHILE   shift, and go to state 31
    tID      shift, and go to state 32

    $default  reduce using rule 16 (Body)

    Body            go to state 89
    Declaration     go to state 34
    Initialisation  go to state 35
    Affectation     go to state 36
    BrancheIf       go to state 37
    BrancheWhile    go to state 38
    Printf          go to state 39
    AppelFonction   go to state 40


State 67

   24 Declaration: tINT tID tFI .

    $default  reduce using rule 24 (Declaration)


State 68

   25 Initialisation: tINT Parametre tEGAL . Calcul tFI

    tPO  shift, and go to state 70
    tNB  shift, and go to state 71
    tID  shift, and go to state 72

    AppelFonction  go to state 74
    Calcul         go to state 90
    DivMul         go to state 76
    Terme          go to state 77


State 69

   43 Printf: tPRINTF tPO tG . tID tG tPF tFI

    tID  shift, and go to state 91


State 70

   55 Terme: tPO . Calcul tPF

    tPO  shift, and go to state 70
    tNB  shift, and go to state 71
    tID  shift, and go to state 72

    AppelFonction  go to state 74
    Calcul         go to state 92
    DivMul         go to state 76
    Terme          go to state 77


State 71

   57 Terme: tNB .

    $default  reduce using rule 57 (Terme)


State 72

   44 AppelFonction: tID . tPO Arguments tPF
   56 Terme: tID .

    tPO  shift, and go to state 52

    tPO       [reduce using rule 56 (Terme)]
    $default  reduce using rule 56 (Terme)


State 73

   28 BrancheIf: tIF tPO Conditions . tPF tAO Body tAF BranchesElseif

    tPF  shift, and go to state 93


State 74

   58 Terme: AppelFonction .

    $default  reduce using rule 58 (Terme)


State 75

   29 Conditions: Calcul . Comparateur Calcul
   30           | Calcul .
   31           | Calcul . Comparateur Calcul Conditions
   32           | Calcul . Conditions
   49 Calcul: Calcul . tADD DivMul
   50       | Calcul . tSOU DivMul

    tEGAL     shift, and go to state 94
    tSOU      shift, and go to state 95
    tADD      shift, and go to state 96
    tPO       shift, and go to state 70
    tINF      shift, and go to state 97
    tSUP      shift, and go to state 98
    tSUPEGAL  shift, and go to state 99
    tINFEGAL  shift, and go to state 100
    tDIF      shift, and go to state 101
    tNB       shift, and go to state 71
    tID       shift, and go to state 72

    $default  reduce using rule 30 (Conditions)

    Conditions     go to state 102
    Comparateur    go to state 103
    AppelFonction  go to state 74
    Calcul         go to state 75
    DivMul         go to state 76
    Terme          go to state 77


State 76

   51 Calcul: DivMul .
   52 DivMul: DivMul . tMUL Terme
   53       | DivMul . tDIV Terme

    tMUL  shift, and go to state 104
    tDIV  shift, and go to state 105

    $default  reduce using rule 51 (Calcul)


State 77

   54 DivMul: Terme .

    $default  reduce using rule 54 (DivMul)


State 78

   42 BrancheWhile: tWHILE tPO Conditions . tPF tAO Body tAF

    tPF  shift, and go to state 106


State 79

   27 Affectation: tID tEGAL Calcul . tFI
   49 Calcul: Calcul . tADD DivMul
   50       | Calcul . tSOU DivMul

    tSOU  shift, and go to state 95
    tADD  shift, and go to state 96
    tFI   shift, and go to state 107


State 80

   44 AppelFonction: tID tPO Arguments . tPF

    tPF  shift, and go to state 108


State 81

   46 Arguments: ListeArguments .

    $default  reduce using rule 46 (Arguments)


State 82

   47 ListeArguments: Calcul .
   48               | Calcul . tV ListeArguments
   49 Calcul: Calcul . tADD DivMul
   50       | Calcul . tSOU DivMul

    tSOU  shift, and go to state 95
    tADD  shift, and go to state 96
    tV    shift, and go to state 109

    $default  reduce using rule 47 (ListeArguments)


State 83

   23 Body: AppelFonction tFI Body .

    $default  reduce using rule 23 (Body)


State 84

   12 Main: tINT tMAIN tPO tPF tAO BodyRet tAF .

    $default  reduce using rule 12 (Main)


State 85

   15 BodyRet: Body tRETURN . Calcul tFI

    tPO  shift, and go to state 70
    tNB  shift, and go to state 71
    tID  shift, and go to state 72

    AppelFonction  go to state 74
    Calcul         go to state 110
    DivMul         go to state 76
    Terme          go to state 77


State 86

   11 ListeArgumentsDeclaration: tINT tID tV ListeArgumentsDeclaration .

    $default  reduce using rule 11 (ListeArgumentsDeclaration)


State 87

    6 Fonction: tINT tID tPO ArgumentsDeclaration tPF tAO BodyRet . tAF

    tAF  shift, and go to state 111


State 88

   13 Main: tVOID tMAIN tPO tPF tAO Body tAF .

    $default  reduce using rule 13 (Main)


State 89

    7 Fonction: tVOID tID tPO ArgumentsDeclaration tPF tAO Body . tAF

    tAF  shift, and go to state 112


State 90

   25 Initialisation: tINT Parametre tEGAL Calcul . tFI
   49 Calcul: Calcul . tADD DivMul
   50       | Calcul . tSOU DivMul

    tSOU  shift, and go to state 95
    tADD  shift, and go to state 96
    tFI   shift, and go to state 113


State 91

   43 Printf: tPRINTF tPO tG tID . tG tPF tFI

    tG  shift, and go to state 114


State 92

   49 Calcul: Calcul . tADD DivMul
   50       | Calcul . tSOU DivMul
   55 Terme: tPO Calcul . tPF

    tSOU  shift, and go to state 95
    tADD  shift, and go to state 96
    tPF   shift, and go to state 115


State 93

   28 BrancheIf: tIF tPO Conditions tPF . tAO Body tAF BranchesElseif

    tAO  shift, and go to state 116


State 94

   33 Comparateur: tEGAL . tEGAL

    tEGAL  shift, and go to state 117


State 95

   50 Calcul: Calcul tSOU . DivMul

    tPO  shift, and go to state 70
    tNB  shift, and go to state 71
    tID  shift, and go to state 72

    AppelFonction  go to state 74
    DivMul         go to state 118
    Terme          go to state 77


State 96

   49 Calcul: Calcul tADD . DivMul

    tPO  shift, and go to state 70
    tNB  shift, and go to state 71
    tID  shift, and go to state 72

    AppelFonction  go to state 74
    DivMul         go to state 119
    Terme          go to state 77


State 97

   34 Comparateur: tINF .

    $default  reduce using rule 34 (Comparateur)


State 98

   35 Comparateur: tSUP .

    $default  reduce using rule 35 (Comparateur)


State 99

   37 Comparateur: tSUPEGAL .

    $default  reduce using rule 37 (Comparateur)


State 100

   36 Comparateur: tINFEGAL .

    $default  reduce using rule 36 (Comparateur)


State 101

   38 Comparateur: tDIF .

    $default  reduce using rule 38 (Comparateur)


State 102

   32 Conditions: Calcul Conditions .

    $default  reduce using rule 32 (Conditions)


State 103

   29 Conditions: Calcul Comparateur . Calcul
   31           | Calcul Comparateur . Calcul Conditions

    tPO  shift, and go to state 70
    tNB  shift, and go to state 71
    tID  shift, and go to state 72

    AppelFonction  go to state 74
    Calcul         go to state 120
    DivMul         go to state 76
    Terme          go to state 77


State 104

   52 DivMul: DivMul tMUL . Terme

    tPO  shift, and go to state 70
    tNB  shift, and go to state 71
    tID  shift, and go to state 72

    AppelFonction  go to state 74
    Terme          go to state 121


State 105

   53 DivMul: DivMul tDIV . Terme

    tPO  shift, and go to state 70
    tNB  shift, and go to state 71
    tID  shift, and go to state 72

    AppelFonction  go to state 74
    Terme          go to state 122


State 106

   42 BrancheWhile: tWHILE tPO Conditions tPF . tAO Body tAF

    tAO  shift, and go to state 123


State 107

   27 Affectation: tID tEGAL Calcul tFI .

    $default  reduce using rule 27 (Affectation)


State 108

   44 AppelFonction: tID tPO Arguments tPF .

    $default  reduce using rule 44 (AppelFonction)


State 109

   48 ListeArguments: Calcul tV . ListeArguments

    tPO  shift, and go to state 70
    tNB  shift, and go to state 71
    tID  shift, and go to state 72

    AppelFonction   go to state 74
    ListeArguments  go to state 124
    Calcul          go to state 82
    DivMul          go to state 76
    Terme           go to state 77


State 110

   15 BodyRet: Body tRETURN Calcul . tFI
   49 Calcul: Calcul . tADD DivMul
   50       | Calcul . tSOU DivMul

    tSOU  shift, and go to state 95
    tADD  shift, and go to state 96
    tFI   shift, and go to state 125


State 111

    6 Fonction: tINT tID tPO ArgumentsDeclaration tPF tAO BodyRet tAF .

    $default  reduce using rule 6 (Fonction)


State 112

    7 Fonction: tVOID tID tPO ArgumentsDeclaration tPF tAO Body tAF .

    $default  reduce using rule 7 (Fonction)


State 113

   25 Initialisation: tINT Parametre tEGAL Calcul tFI .

    $default  reduce using rule 25 (Initialisation)


State 114

   43 Printf: tPRINTF tPO tG tID tG . tPF tFI

    tPF  shift, and go to state 126


State 115

   55 Terme: tPO Calcul tPF .

    $default  reduce using rule 55 (Terme)


State 116

   28 BrancheIf: tIF tPO Conditions tPF tAO . Body tAF BranchesElseif

    tINT     shift, and go to state 28
    tPRINTF  shift, and go to state 29
    tIF      shift, and go to state 30
    tWHILE   shift, and go to state 31
    tID      shift, and go to state 32

    $default  reduce using rule 16 (Body)

    Body            go to state 127
    Declaration     go to state 34
    Initialisation  go to state 35
    Affectation     go to state 36
    BrancheIf       go to state 37
    BrancheWhile    go to state 38
    Printf          go to state 39
    AppelFonction   go to state 40


State 117

   33 Comparateur: tEGAL tEGAL .

    $default  reduce using rule 33 (Comparateur)


State 118

   50 Calcul: Calcul tSOU DivMul .
   52 DivMul: DivMul . tMUL Terme
   53       | DivMul . tDIV Terme

    tMUL  shift, and go to state 104
    tDIV  shift, and go to state 105

    $default  reduce using rule 50 (Calcul)


State 119

   49 Calcul: Calcul tADD DivMul .
   52 DivMul: DivMul . tMUL Terme
   53       | DivMul . tDIV Terme

    tMUL  shift, and go to state 104
    tDIV  shift, and go to state 105

    $default  reduce using rule 49 (Calcul)


State 120

   29 Conditions: Calcul Comparateur Calcul .
   31           | Calcul Comparateur Calcul . Conditions
   49 Calcul: Calcul . tADD DivMul
   50       | Calcul . tSOU DivMul

    tSOU  shift, and go to state 95
    tADD  shift, and go to state 96
    tPO   shift, and go to state 70
    tNB   shift, and go to state 71
    tID   shift, and go to state 72

    $default  reduce using rule 29 (Conditions)

    Conditions     go to state 128
    AppelFonction  go to state 74
    Calcul         go to state 75
    DivMul         go to state 76
    Terme          go to state 77


State 121

   52 DivMul: DivMul tMUL Terme .

    $default  reduce using rule 52 (DivMul)


State 122

   53 DivMul: DivMul tDIV Terme .

    $default  reduce using rule 53 (DivMul)


State 123

   42 BrancheWhile: tWHILE tPO Conditions tPF tAO . Body tAF

    tINT     shift, and go to state 28
    tPRINTF  shift, and go to state 29
    tIF      shift, and go to state 30
    tWHILE   shift, and go to state 31
    tID      shift, and go to state 32

    $default  reduce using rule 16 (Body)

    Body            go to state 129
    Declaration     go to state 34
    Initialisation  go to state 35
    Affectation     go to state 36
    BrancheIf       go to state 37
    BrancheWhile    go to state 38
    Printf          go to state 39
    AppelFonction   go to state 40


State 124

   48 ListeArguments: Calcul tV ListeArguments .

    $default  reduce using rule 48 (ListeArguments)


State 125

   15 BodyRet: Body tRETURN Calcul tFI .

    $default  reduce using rule 15 (BodyRet)


State 126

   43 Printf: tPRINTF tPO tG tID tG tPF . tFI

    tFI  shift, and go to state 130


State 127

   28 BrancheIf: tIF tPO Conditions tPF tAO Body . tAF BranchesElseif

    tAF  shift, and go to state 131


State 128

   31 Conditions: Calcul Comparateur Calcul Conditions .

    $default  reduce using rule 31 (Conditions)


State 129

   42 BrancheWhile: tWHILE tPO Conditions tPF tAO Body . tAF

    tAF  shift, and go to state 132


State 130

   43 Printf: tPRINTF tPO tG tID tG tPF tFI .

    $default  reduce using rule 43 (Printf)


State 131

   28 BrancheIf: tIF tPO Conditions tPF tAO Body tAF . BranchesElseif

    tELSE  shift, and go to state 133

    $default  reduce using rule 39 (BranchesElseif)

    BranchesElseif  go to state 134


State 132

   42 BrancheWhile: tWHILE tPO Conditions tPF tAO Body tAF .

    $default  reduce using rule 42 (BrancheWhile)


State 133

   40 BranchesElseif: tELSE . tIF tPO Conditions tPF tAO Body tAF BranchesElseif
   41               | tELSE . tAO Body tAF

    tAO  shift, and go to state 135
    tIF  shift, and go to state 136


State 134

   28 BrancheIf: tIF tPO Conditions tPF tAO Body tAF BranchesElseif .

    $default  reduce using rule 28 (BrancheIf)


State 135

   41 BranchesElseif: tELSE tAO . Body tAF

    tINT     shift, and go to state 28
    tPRINTF  shift, and go to state 29
    tIF      shift, and go to state 30
    tWHILE   shift, and go to state 31
    tID      shift, and go to state 32

    $default  reduce using rule 16 (Body)

    Body            go to state 137
    Declaration     go to state 34
    Initialisation  go to state 35
    Affectation     go to state 36
    BrancheIf       go to state 37
    BrancheWhile    go to state 38
    Printf          go to state 39
    AppelFonction   go to state 40


State 136

   40 BranchesElseif: tELSE tIF . tPO Conditions tPF tAO Body tAF BranchesElseif

    tPO  shift, and go to state 138


State 137

   41 BranchesElseif: tELSE tAO Body . tAF

    tAF  shift, and go to state 139


State 138

   40 BranchesElseif: tELSE tIF tPO . Conditions tPF tAO Body tAF BranchesElseif

    tPO  shift, and go to state 70
    tNB  shift, and go to state 71
    tID  shift, and go to state 72

    Conditions     go to state 140
    AppelFonction  go to state 74
    Calcul         go to state 75
    DivMul         go to state 76
    Terme          go to state 77


State 139

   41 BranchesElseif: tELSE tAO Body tAF .

    $default  reduce using rule 41 (BranchesElseif)


State 140

   40 BranchesElseif: tELSE tIF tPO Conditions . tPF tAO Body tAF BranchesElseif

    tPF  shift, and go to state 141


State 141

   40 BranchesElseif: tELSE tIF tPO Conditions tPF . tAO Body tAF BranchesElseif

    tAO  shift, and go to state 142


State 142

   40 BranchesElseif: tELSE tIF tPO Conditions tPF tAO . Body tAF BranchesElseif

    tINT     shift, and go to state 28
    tPRINTF  shift, and go to state 29
    tIF      shift, and go to state 30
    tWHILE   shift, and go to state 31
    tID      shift, and go to state 32

    $default  reduce using rule 16 (Body)

    Body            go to state 143
    Declaration     go to state 34
    Initialisation  go to state 35
    Affectation     go to state 36
    BrancheIf       go to state 37
    BrancheWhile    go to state 38
    Printf          go to state 39
    AppelFonction   go to state 40


State 143

   40 BranchesElseif: tELSE tIF tPO Conditions tPF tAO Body . tAF BranchesElseif

    tAF  shift, and go to state 144


State 144

   40 BranchesElseif: tELSE tIF tPO Conditions tPF tAO Body tAF . BranchesElseif

    tELSE  shift, and go to state 133

    $default  reduce using rule 39 (BranchesElseif)

    BranchesElseif  go to state 145


State 145

   40 BranchesElseif: tELSE tIF tPO Conditions tPF tAO Body tAF BranchesElseif .

    $default  reduce using rule 40 (BranchesElseif)
