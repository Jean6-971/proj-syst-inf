Terminals unused in grammar

    tCONST
    tV
    tPRINTF
    tIF
    tELSE
    tWHILE
    tERROR


State 38 conflicts: 1 shift/reduce


Grammar

    0 $accept: Programme $end

    1 Programme: Fonctions

    2 Fonctions: Fonctions Main
    3          | Main
    4          | Fonctions Fonction
    5          | Fonction

    6 Fonction: tINT tID tPO tPF tAO Body tAF

    7 Main: tINT tMAIN tPO tPF tAO Body tAF
    8     | tMAIN tPO tPF tAO Body tAF

    9 Body: %empty
   10     | Declaration Body
   11     | Initialisation Body
   12     | Affectation Body

   13 Declaration: tINT tID tFI

   14 Initialisation: tINT tID tEGAL tNB tFI

   15 Affectation: tID tEGAL tNB tFI
   16            | tID tEGAL Calcul tFI

   17 Calcul: Calcul tADD DivMul
   18       | Calcul tSOU DivMul
   19       | DivMul

   20 DivMul: DivMul tMUL Terme
   21       | DivMul tDIV Terme
   22       | Terme

   23 Terme: tPO Calcul tPF
   24      | tID
   25      | tNB


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    tMAIN (258) 7 8
    tAO (259) 6 7 8
    tAF (260) 6 7 8
    tCONST (261)
    tINT (262) 6 7 13 14
    tEGAL (263) 14 15 16
    tSOU (264) 18
    tADD (265) 17
    tMUL (266) 20
    tDIV (267) 21
    tPO (268) 6 7 8 23
    tPF (269) 6 7 8 23
    tV (270)
    tFI (271) 13 14 15 16
    tPRINTF (272)
    tIF (273)
    tELSE (274)
    tWHILE (275)
    tERROR (276)
    tNB <nb> (277) 14 15 25
    tID <var> (278) 6 13 14 15 16 24


Nonterminals, with rules where they appear

    $accept (24)
        on left: 0
    Programme (25)
        on left: 1
        on right: 0
    Fonctions (26)
        on left: 2 3 4 5
        on right: 1 2 4
    Fonction (27)
        on left: 6
        on right: 4 5
    Main (28)
        on left: 7 8
        on right: 2 3
    Body (29)
        on left: 9 10 11 12
        on right: 6 7 8 10 11 12
    Declaration (30)
        on left: 13
        on right: 10
    Initialisation (31)
        on left: 14
        on right: 11
    Affectation (32)
        on left: 15 16
        on right: 12
    Calcul <nb> (33)
        on left: 17 18 19
        on right: 16 17 18 23
    DivMul <nb> (34)
        on left: 20 21 22
        on right: 17 18 19 20 21
    Terme <nb> (35)
        on left: 23 24 25
        on right: 20 21 22


State 0

    0 $accept: . Programme $end

    tMAIN  shift, and go to state 1
    tINT   shift, and go to state 2

    Programme  go to state 3
    Fonctions  go to state 4
    Fonction   go to state 5
    Main       go to state 6


State 1

    8 Main: tMAIN . tPO tPF tAO Body tAF

    tPO  shift, and go to state 7


State 2

    6 Fonction: tINT . tID tPO tPF tAO Body tAF
    7 Main: tINT . tMAIN tPO tPF tAO Body tAF

    tMAIN  shift, and go to state 8
    tID    shift, and go to state 9


State 3

    0 $accept: Programme . $end

    $end  shift, and go to state 10


State 4

    1 Programme: Fonctions .
    2 Fonctions: Fonctions . Main
    4          | Fonctions . Fonction

    tMAIN  shift, and go to state 1
    tINT   shift, and go to state 2

    $default  reduce using rule 1 (Programme)

    Fonction  go to state 11
    Main      go to state 12


State 5

    5 Fonctions: Fonction .

    $default  reduce using rule 5 (Fonctions)


State 6

    3 Fonctions: Main .

    $default  reduce using rule 3 (Fonctions)


State 7

    8 Main: tMAIN tPO . tPF tAO Body tAF

    tPF  shift, and go to state 13


State 8

    7 Main: tINT tMAIN . tPO tPF tAO Body tAF

    tPO  shift, and go to state 14


State 9

    6 Fonction: tINT tID . tPO tPF tAO Body tAF

    tPO  shift, and go to state 15


State 10

    0 $accept: Programme $end .

    $default  accept


State 11

    4 Fonctions: Fonctions Fonction .

    $default  reduce using rule 4 (Fonctions)


State 12

    2 Fonctions: Fonctions Main .

    $default  reduce using rule 2 (Fonctions)


State 13

    8 Main: tMAIN tPO tPF . tAO Body tAF

    tAO  shift, and go to state 16


State 14

    7 Main: tINT tMAIN tPO . tPF tAO Body tAF

    tPF  shift, and go to state 17


State 15

    6 Fonction: tINT tID tPO . tPF tAO Body tAF

    tPF  shift, and go to state 18


State 16

    8 Main: tMAIN tPO tPF tAO . Body tAF

    tINT  shift, and go to state 19
    tID   shift, and go to state 20

    $default  reduce using rule 9 (Body)

    Body            go to state 21
    Declaration     go to state 22
    Initialisation  go to state 23
    Affectation     go to state 24


State 17

    7 Main: tINT tMAIN tPO tPF . tAO Body tAF

    tAO  shift, and go to state 25


State 18

    6 Fonction: tINT tID tPO tPF . tAO Body tAF

    tAO  shift, and go to state 26


State 19

   13 Declaration: tINT . tID tFI
   14 Initialisation: tINT . tID tEGAL tNB tFI

    tID  shift, and go to state 27


State 20

   15 Affectation: tID . tEGAL tNB tFI
   16            | tID . tEGAL Calcul tFI

    tEGAL  shift, and go to state 28


State 21

    8 Main: tMAIN tPO tPF tAO Body . tAF

    tAF  shift, and go to state 29


State 22

   10 Body: Declaration . Body

    tINT  shift, and go to state 19
    tID   shift, and go to state 20

    $default  reduce using rule 9 (Body)

    Body            go to state 30
    Declaration     go to state 22
    Initialisation  go to state 23
    Affectation     go to state 24


State 23

   11 Body: Initialisation . Body

    tINT  shift, and go to state 19
    tID   shift, and go to state 20

    $default  reduce using rule 9 (Body)

    Body            go to state 31
    Declaration     go to state 22
    Initialisation  go to state 23
    Affectation     go to state 24


State 24

   12 Body: Affectation . Body

    tINT  shift, and go to state 19
    tID   shift, and go to state 20

    $default  reduce using rule 9 (Body)

    Body            go to state 32
    Declaration     go to state 22
    Initialisation  go to state 23
    Affectation     go to state 24


State 25

    7 Main: tINT tMAIN tPO tPF tAO . Body tAF

    tINT  shift, and go to state 19
    tID   shift, and go to state 20

    $default  reduce using rule 9 (Body)

    Body            go to state 33
    Declaration     go to state 22
    Initialisation  go to state 23
    Affectation     go to state 24


State 26

    6 Fonction: tINT tID tPO tPF tAO . Body tAF

    tINT  shift, and go to state 19
    tID   shift, and go to state 20

    $default  reduce using rule 9 (Body)

    Body            go to state 34
    Declaration     go to state 22
    Initialisation  go to state 23
    Affectation     go to state 24


State 27

   13 Declaration: tINT tID . tFI
   14 Initialisation: tINT tID . tEGAL tNB tFI

    tEGAL  shift, and go to state 35
    tFI    shift, and go to state 36


State 28

   15 Affectation: tID tEGAL . tNB tFI
   16            | tID tEGAL . Calcul tFI

    tPO  shift, and go to state 37
    tNB  shift, and go to state 38
    tID  shift, and go to state 39

    Calcul  go to state 40
    DivMul  go to state 41
    Terme   go to state 42


State 29

    8 Main: tMAIN tPO tPF tAO Body tAF .

    $default  reduce using rule 8 (Main)


State 30

   10 Body: Declaration Body .

    $default  reduce using rule 10 (Body)


State 31

   11 Body: Initialisation Body .

    $default  reduce using rule 11 (Body)


State 32

   12 Body: Affectation Body .

    $default  reduce using rule 12 (Body)


State 33

    7 Main: tINT tMAIN tPO tPF tAO Body . tAF

    tAF  shift, and go to state 43


State 34

    6 Fonction: tINT tID tPO tPF tAO Body . tAF

    tAF  shift, and go to state 44


State 35

   14 Initialisation: tINT tID tEGAL . tNB tFI

    tNB  shift, and go to state 45


State 36

   13 Declaration: tINT tID tFI .

    $default  reduce using rule 13 (Declaration)


State 37

   23 Terme: tPO . Calcul tPF

    tPO  shift, and go to state 37
    tNB  shift, and go to state 46
    tID  shift, and go to state 39

    Calcul  go to state 47
    DivMul  go to state 41
    Terme   go to state 42


State 38

   15 Affectation: tID tEGAL tNB . tFI
   25 Terme: tNB .

    tFI  shift, and go to state 48

    tFI       [reduce using rule 25 (Terme)]
    $default  reduce using rule 25 (Terme)


State 39

   24 Terme: tID .

    $default  reduce using rule 24 (Terme)


State 40

   16 Affectation: tID tEGAL Calcul . tFI
   17 Calcul: Calcul . tADD DivMul
   18       | Calcul . tSOU DivMul

    tSOU  shift, and go to state 49
    tADD  shift, and go to state 50
    tFI   shift, and go to state 51


State 41

   19 Calcul: DivMul .
   20 DivMul: DivMul . tMUL Terme
   21       | DivMul . tDIV Terme

    tMUL  shift, and go to state 52
    tDIV  shift, and go to state 53

    $default  reduce using rule 19 (Calcul)


State 42

   22 DivMul: Terme .

    $default  reduce using rule 22 (DivMul)


State 43

    7 Main: tINT tMAIN tPO tPF tAO Body tAF .

    $default  reduce using rule 7 (Main)


State 44

    6 Fonction: tINT tID tPO tPF tAO Body tAF .

    $default  reduce using rule 6 (Fonction)


State 45

   14 Initialisation: tINT tID tEGAL tNB . tFI

    tFI  shift, and go to state 54


State 46

   25 Terme: tNB .

    $default  reduce using rule 25 (Terme)


State 47

   17 Calcul: Calcul . tADD DivMul
   18       | Calcul . tSOU DivMul
   23 Terme: tPO Calcul . tPF

    tSOU  shift, and go to state 49
    tADD  shift, and go to state 50
    tPF   shift, and go to state 55


State 48

   15 Affectation: tID tEGAL tNB tFI .

    $default  reduce using rule 15 (Affectation)


State 49

   18 Calcul: Calcul tSOU . DivMul

    tPO  shift, and go to state 37
    tNB  shift, and go to state 46
    tID  shift, and go to state 39

    DivMul  go to state 56
    Terme   go to state 42


State 50

   17 Calcul: Calcul tADD . DivMul

    tPO  shift, and go to state 37
    tNB  shift, and go to state 46
    tID  shift, and go to state 39

    DivMul  go to state 57
    Terme   go to state 42


State 51

   16 Affectation: tID tEGAL Calcul tFI .

    $default  reduce using rule 16 (Affectation)


State 52

   20 DivMul: DivMul tMUL . Terme

    tPO  shift, and go to state 37
    tNB  shift, and go to state 46
    tID  shift, and go to state 39

    Terme  go to state 58


State 53

   21 DivMul: DivMul tDIV . Terme

    tPO  shift, and go to state 37
    tNB  shift, and go to state 46
    tID  shift, and go to state 39

    Terme  go to state 59


State 54

   14 Initialisation: tINT tID tEGAL tNB tFI .

    $default  reduce using rule 14 (Initialisation)


State 55

   23 Terme: tPO Calcul tPF .

    $default  reduce using rule 23 (Terme)


State 56

   18 Calcul: Calcul tSOU DivMul .
   20 DivMul: DivMul . tMUL Terme
   21       | DivMul . tDIV Terme

    tMUL  shift, and go to state 52
    tDIV  shift, and go to state 53

    $default  reduce using rule 18 (Calcul)


State 57

   17 Calcul: Calcul tADD DivMul .
   20 DivMul: DivMul . tMUL Terme
   21       | DivMul . tDIV Terme

    tMUL  shift, and go to state 52
    tDIV  shift, and go to state 53

    $default  reduce using rule 17 (Calcul)


State 58

   20 DivMul: DivMul tMUL Terme .

    $default  reduce using rule 20 (DivMul)


State 59

   21 DivMul: DivMul tDIV Terme .

    $default  reduce using rule 21 (DivMul)
