Terminals unused in grammar

    tCONST
    tERROR
    tG


Rules useless in parser due to conflicts

   31 $@4: %empty


State 100 conflicts: 1 reduce/reduce


Grammar

    0 $accept: Programme $end

    1 Programme: Fonctions

    2 Fonctions: Fonctions Main
    3          | Main
    4          | Fonctions Fonction
    5          | Fonction

    6 Fonction: tINT tID tPO ArgumentsDeclaration tPF tAO BodyRet tAF
    7         | tVOID tID tPO ArgumentsDeclaration tPF tAO Body tAF

    8 ArgumentsDeclaration: %empty
    9                     | ListeArgumentsDeclaration

   10 ListeArgumentsDeclaration: tINT tID
   11                          | tINT tID tV ListeArgumentsDeclaration

   12 Main: tINT tMAIN tPO tPF tAO BodyRet tAF
   13     | tVOID tMAIN tPO tPF tAO Body tAF
   14     | tMAIN tPO tPF tAO Body tAF

   15 BodyRet: Body tRETURN Calcul tFI

   16 Body: %empty
   17     | Declaration Body
   18     | Initialisation Body
   19     | Affectation Body
   20     | BrancheIf Body
   21     | BrancheWhile Body
   22     | Printf Body
   23     | AppelFonction tFI Body

   24 Declaration: tINT tID tFI

   25 $@1: %empty

   26 Initialisation: tINT tID $@1 tEGAL Calcul tFI

   27 Affectation: tID tEGAL Calcul tFI

   28 $@2: %empty

   29 $@3: %empty

   30 BrancheIf: tIF tPO Conditions tPF $@2 tAO Body $@3 tAF

   31 $@4: %empty

   32 $@5: %empty

   33 BrancheIf: tIF tPO Conditions tPF $@4 tAO Body $@5 tAF BranchesElseif

   34 Conditions: Calcul tEGAL tEGAL Calcul
   35           | Calcul tINF Calcul
   36           | Calcul tSUP Calcul
   37           | Calcul

   38 BranchesElseif: tELSE BrancheIf

   39 $@6: %empty

   40 BranchesElseif: tELSE $@6 tAO Body tAF

   41 BrancheWhile: tWHILE tPO Conditions tPF tAO Body tAF

   42 Printf: tPRINTF tPO tID tPF tFI

   43 AppelFonction: tID tPO Arguments tPF

   44 Arguments: %empty
   45          | ListeArguments

   46 ListeArguments: Calcul
   47               | Calcul tV ListeArguments

   48 Calcul: Calcul tADD DivMul
   49       | Calcul tSOU DivMul
   50       | DivMul

   51 DivMul: DivMul tMUL Terme
   52       | DivMul tDIV Terme
   53       | Terme

   54 Terme: tPO Calcul tPF
   55      | tID
   56      | tNB
   57      | AppelFonction


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    tMAIN (258) 12 13 14
    tAO (259) 6 7 12 13 14 30 33 40 41
    tAF (260) 6 7 12 13 14 30 33 40 41
    tCONST (261)
    tINT (262) 6 10 11 12 24 26
    tEGAL (263) 26 27 34
    tSOU (264) 49
    tADD (265) 48
    tMUL (266) 51
    tDIV (267) 52
    tPO (268) 6 7 12 13 14 30 33 41 42 43 54
    tPF (269) 6 7 12 13 14 30 33 41 42 43 54
    tV (270) 11 47
    tFI (271) 15 23 24 26 27 42
    tPRINTF (272) 42
    tWHILE (273) 41
    tERROR (274)
    tRETURN (275) 15
    tVOID (276) 7 13
    tINF (277) 35
    tSUP (278) 36
    tG (279)
    tNB <nb> (280) 56
    tIF <nb> (281) 30 33
    tELSE <nb> (282) 38 40
    tID <var> (283) 6 7 10 11 24 26 27 42 43 55


Nonterminals, with rules where they appear

    $accept (29)
        on left: 0
    Programme (30)
        on left: 1
        on right: 0
    Fonctions (31)
        on left: 2 3 4 5
        on right: 1 2 4
    Fonction (32)
        on left: 6 7
        on right: 4 5
    ArgumentsDeclaration (33)
        on left: 8 9
        on right: 6 7
    ListeArgumentsDeclaration (34)
        on left: 10 11
        on right: 9 11
    Main (35)
        on left: 12 13 14
        on right: 2 3
    BodyRet (36)
        on left: 15
        on right: 6 12
    Body (37)
        on left: 16 17 18 19 20 21 22 23
        on right: 7 13 14 15 17 18 19 20 21 22 23 30 33 40 41
    Declaration (38)
        on left: 24
        on right: 17
    Initialisation (39)
        on left: 26
        on right: 18
    $@1 (40)
        on left: 25
        on right: 26
    Affectation (41)
        on left: 27
        on right: 19
    BrancheIf (42)
        on left: 30 33
        on right: 20 38
    $@2 (43)
        on left: 28
        on right: 30
    $@3 (44)
        on left: 29
        on right: 30
    $@4 (45)
        on left: 31
        on right: 33
    $@5 (46)
        on left: 32
        on right: 33
    Conditions (47)
        on left: 34 35 36 37
        on right: 30 33 41
    BranchesElseif (48)
        on left: 38 40
        on right: 33
    $@6 (49)
        on left: 39
        on right: 40
    BrancheWhile (50)
        on left: 41
        on right: 21
    Printf (51)
        on left: 42
        on right: 22
    AppelFonction <nb> (52)
        on left: 43
        on right: 23 57
    Arguments (53)
        on left: 44 45
        on right: 43
    ListeArguments (54)
        on left: 46 47
        on right: 45 47
    Calcul <nb> (55)
        on left: 48 49 50
        on right: 15 26 27 34 35 36 37 46 47 48 49 54
    DivMul <nb> (56)
        on left: 51 52 53
        on right: 48 49 50 51 52
    Terme <nb> (57)
        on left: 54 55 56 57
        on right: 51 52 53


State 0

    0 $accept: . Programme $end

    tMAIN  shift, and go to state 1
    tINT   shift, and go to state 2
    tVOID  shift, and go to state 3

    Programme  go to state 4
    Fonctions  go to state 5
    Fonction   go to state 6
    Main       go to state 7


State 1

   14 Main: tMAIN . tPO tPF tAO Body tAF

    tPO  shift, and go to state 8


State 2

    6 Fonction: tINT . tID tPO ArgumentsDeclaration tPF tAO BodyRet tAF
   12 Main: tINT . tMAIN tPO tPF tAO BodyRet tAF

    tMAIN  shift, and go to state 9
    tID    shift, and go to state 10


State 3

    7 Fonction: tVOID . tID tPO ArgumentsDeclaration tPF tAO Body tAF
   13 Main: tVOID . tMAIN tPO tPF tAO Body tAF

    tMAIN  shift, and go to state 11
    tID    shift, and go to state 12


State 4

    0 $accept: Programme . $end

    $end  shift, and go to state 13


State 5

    1 Programme: Fonctions .
    2 Fonctions: Fonctions . Main
    4          | Fonctions . Fonction

    tMAIN  shift, and go to state 1
    tINT   shift, and go to state 2
    tVOID  shift, and go to state 3

    $default  reduce using rule 1 (Programme)

    Fonction  go to state 14
    Main      go to state 15


State 6

    5 Fonctions: Fonction .

    $default  reduce using rule 5 (Fonctions)


State 7

    3 Fonctions: Main .

    $default  reduce using rule 3 (Fonctions)


State 8

   14 Main: tMAIN tPO . tPF tAO Body tAF

    tPF  shift, and go to state 16


State 9

   12 Main: tINT tMAIN . tPO tPF tAO BodyRet tAF

    tPO  shift, and go to state 17


State 10

    6 Fonction: tINT tID . tPO ArgumentsDeclaration tPF tAO BodyRet tAF

    tPO  shift, and go to state 18


State 11

   13 Main: tVOID tMAIN . tPO tPF tAO Body tAF

    tPO  shift, and go to state 19


State 12

    7 Fonction: tVOID tID . tPO ArgumentsDeclaration tPF tAO Body tAF

    tPO  shift, and go to state 20


State 13

    0 $accept: Programme $end .

    $default  accept


State 14

    4 Fonctions: Fonctions Fonction .

    $default  reduce using rule 4 (Fonctions)


State 15

    2 Fonctions: Fonctions Main .

    $default  reduce using rule 2 (Fonctions)


State 16

   14 Main: tMAIN tPO tPF . tAO Body tAF

    tAO  shift, and go to state 21


State 17

   12 Main: tINT tMAIN tPO . tPF tAO BodyRet tAF

    tPF  shift, and go to state 22


State 18

    6 Fonction: tINT tID tPO . ArgumentsDeclaration tPF tAO BodyRet tAF

    tINT  shift, and go to state 23

    $default  reduce using rule 8 (ArgumentsDeclaration)

    ArgumentsDeclaration       go to state 24
    ListeArgumentsDeclaration  go to state 25


State 19

   13 Main: tVOID tMAIN tPO . tPF tAO Body tAF

    tPF  shift, and go to state 26


State 20

    7 Fonction: tVOID tID tPO . ArgumentsDeclaration tPF tAO Body tAF

    tINT  shift, and go to state 23

    $default  reduce using rule 8 (ArgumentsDeclaration)

    ArgumentsDeclaration       go to state 27
    ListeArgumentsDeclaration  go to state 25


State 21

   14 Main: tMAIN tPO tPF tAO . Body tAF

    tINT     shift, and go to state 28
    tPRINTF  shift, and go to state 29
    tWHILE   shift, and go to state 30
    tIF      shift, and go to state 31
    tID      shift, and go to state 32

    $default  reduce using rule 16 (Body)

    Body            go to state 33
    Declaration     go to state 34
    Initialisation  go to state 35
    Affectation     go to state 36
    BrancheIf       go to state 37
    BrancheWhile    go to state 38
    Printf          go to state 39
    AppelFonction   go to state 40


State 22

   12 Main: tINT tMAIN tPO tPF . tAO BodyRet tAF

    tAO  shift, and go to state 41


State 23

   10 ListeArgumentsDeclaration: tINT . tID
   11                          | tINT . tID tV ListeArgumentsDeclaration

    tID  shift, and go to state 42


State 24

    6 Fonction: tINT tID tPO ArgumentsDeclaration . tPF tAO BodyRet tAF

    tPF  shift, and go to state 43


State 25

    9 ArgumentsDeclaration: ListeArgumentsDeclaration .

    $default  reduce using rule 9 (ArgumentsDeclaration)


State 26

   13 Main: tVOID tMAIN tPO tPF . tAO Body tAF

    tAO  shift, and go to state 44


State 27

    7 Fonction: tVOID tID tPO ArgumentsDeclaration . tPF tAO Body tAF

    tPF  shift, and go to state 45


State 28

   24 Declaration: tINT . tID tFI
   26 Initialisation: tINT . tID $@1 tEGAL Calcul tFI

    tID  shift, and go to state 46


State 29

   42 Printf: tPRINTF . tPO tID tPF tFI

    tPO  shift, and go to state 47


State 30

   41 BrancheWhile: tWHILE . tPO Conditions tPF tAO Body tAF

    tPO  shift, and go to state 48


State 31

   30 BrancheIf: tIF . tPO Conditions tPF $@2 tAO Body $@3 tAF
   33          | tIF . tPO Conditions tPF $@4 tAO Body $@5 tAF BranchesElseif

    tPO  shift, and go to state 49


State 32

   27 Affectation: tID . tEGAL Calcul tFI
   43 AppelFonction: tID . tPO Arguments tPF

    tEGAL  shift, and go to state 50
    tPO    shift, and go to state 51


State 33

   14 Main: tMAIN tPO tPF tAO Body . tAF

    tAF  shift, and go to state 52


State 34

   17 Body: Declaration . Body

    tINT     shift, and go to state 28
    tPRINTF  shift, and go to state 29
    tWHILE   shift, and go to state 30
    tIF      shift, and go to state 31
    tID      shift, and go to state 32

    $default  reduce using rule 16 (Body)

    Body            go to state 53
    Declaration     go to state 34
    Initialisation  go to state 35
    Affectation     go to state 36
    BrancheIf       go to state 37
    BrancheWhile    go to state 38
    Printf          go to state 39
    AppelFonction   go to state 40


State 35

   18 Body: Initialisation . Body

    tINT     shift, and go to state 28
    tPRINTF  shift, and go to state 29
    tWHILE   shift, and go to state 30
    tIF      shift, and go to state 31
    tID      shift, and go to state 32

    $default  reduce using rule 16 (Body)

    Body            go to state 54
    Declaration     go to state 34
    Initialisation  go to state 35
    Affectation     go to state 36
    BrancheIf       go to state 37
    BrancheWhile    go to state 38
    Printf          go to state 39
    AppelFonction   go to state 40


State 36

   19 Body: Affectation . Body

    tINT     shift, and go to state 28
    tPRINTF  shift, and go to state 29
    tWHILE   shift, and go to state 30
    tIF      shift, and go to state 31
    tID      shift, and go to state 32

    $default  reduce using rule 16 (Body)

    Body            go to state 55
    Declaration     go to state 34
    Initialisation  go to state 35
    Affectation     go to state 36
    BrancheIf       go to state 37
    BrancheWhile    go to state 38
    Printf          go to state 39
    AppelFonction   go to state 40


State 37

   20 Body: BrancheIf . Body

    tINT     shift, and go to state 28
    tPRINTF  shift, and go to state 29
    tWHILE   shift, and go to state 30
    tIF      shift, and go to state 31
    tID      shift, and go to state 32

    $default  reduce using rule 16 (Body)

    Body            go to state 56
    Declaration     go to state 34
    Initialisation  go to state 35
    Affectation     go to state 36
    BrancheIf       go to state 37
    BrancheWhile    go to state 38
    Printf          go to state 39
    AppelFonction   go to state 40


State 38

   21 Body: BrancheWhile . Body

    tINT     shift, and go to state 28
    tPRINTF  shift, and go to state 29
    tWHILE   shift, and go to state 30
    tIF      shift, and go to state 31
    tID      shift, and go to state 32

    $default  reduce using rule 16 (Body)

    Body            go to state 57
    Declaration     go to state 34
    Initialisation  go to state 35
    Affectation     go to state 36
    BrancheIf       go to state 37
    BrancheWhile    go to state 38
    Printf          go to state 39
    AppelFonction   go to state 40


State 39

   22 Body: Printf . Body

    tINT     shift, and go to state 28
    tPRINTF  shift, and go to state 29
    tWHILE   shift, and go to state 30
    tIF      shift, and go to state 31
    tID      shift, and go to state 32

    $default  reduce using rule 16 (Body)

    Body            go to state 58
    Declaration     go to state 34
    Initialisation  go to state 35
    Affectation     go to state 36
    BrancheIf       go to state 37
    BrancheWhile    go to state 38
    Printf          go to state 39
    AppelFonction   go to state 40


State 40

   23 Body: AppelFonction . tFI Body

    tFI  shift, and go to state 59


State 41

   12 Main: tINT tMAIN tPO tPF tAO . BodyRet tAF

    tINT     shift, and go to state 28
    tPRINTF  shift, and go to state 29
    tWHILE   shift, and go to state 30
    tIF      shift, and go to state 31
    tID      shift, and go to state 32

    $default  reduce using rule 16 (Body)

    BodyRet         go to state 60
    Body            go to state 61
    Declaration     go to state 34
    Initialisation  go to state 35
    Affectation     go to state 36
    BrancheIf       go to state 37
    BrancheWhile    go to state 38
    Printf          go to state 39
    AppelFonction   go to state 40


State 42

   10 ListeArgumentsDeclaration: tINT tID .
   11                          | tINT tID . tV ListeArgumentsDeclaration

    tV  shift, and go to state 62

    $default  reduce using rule 10 (ListeArgumentsDeclaration)


State 43

    6 Fonction: tINT tID tPO ArgumentsDeclaration tPF . tAO BodyRet tAF

    tAO  shift, and go to state 63


State 44

   13 Main: tVOID tMAIN tPO tPF tAO . Body tAF

    tINT     shift, and go to state 28
    tPRINTF  shift, and go to state 29
    tWHILE   shift, and go to state 30
    tIF      shift, and go to state 31
    tID      shift, and go to state 32

    $default  reduce using rule 16 (Body)

    Body            go to state 64
    Declaration     go to state 34
    Initialisation  go to state 35
    Affectation     go to state 36
    BrancheIf       go to state 37
    BrancheWhile    go to state 38
    Printf          go to state 39
    AppelFonction   go to state 40


State 45

    7 Fonction: tVOID tID tPO ArgumentsDeclaration tPF . tAO Body tAF

    tAO  shift, and go to state 65


State 46

   24 Declaration: tINT tID . tFI
   26 Initialisation: tINT tID . $@1 tEGAL Calcul tFI

    tFI  shift, and go to state 66

    $default  reduce using rule 25 ($@1)

    $@1  go to state 67


State 47

   42 Printf: tPRINTF tPO . tID tPF tFI

    tID  shift, and go to state 68


State 48

   41 BrancheWhile: tWHILE tPO . Conditions tPF tAO Body tAF

    tPO  shift, and go to state 69
    tNB  shift, and go to state 70
    tID  shift, and go to state 71

    Conditions     go to state 72
    AppelFonction  go to state 73
    Calcul         go to state 74
    DivMul         go to state 75
    Terme          go to state 76


State 49

   30 BrancheIf: tIF tPO . Conditions tPF $@2 tAO Body $@3 tAF
   33          | tIF tPO . Conditions tPF $@4 tAO Body $@5 tAF BranchesElseif

    tPO  shift, and go to state 69
    tNB  shift, and go to state 70
    tID  shift, and go to state 71

    Conditions     go to state 77
    AppelFonction  go to state 73
    Calcul         go to state 74
    DivMul         go to state 75
    Terme          go to state 76


State 50

   27 Affectation: tID tEGAL . Calcul tFI

    tPO  shift, and go to state 69
    tNB  shift, and go to state 70
    tID  shift, and go to state 71

    AppelFonction  go to state 73
    Calcul         go to state 78
    DivMul         go to state 75
    Terme          go to state 76


State 51

   43 AppelFonction: tID tPO . Arguments tPF

    tPO  shift, and go to state 69
    tNB  shift, and go to state 70
    tID  shift, and go to state 71

    $default  reduce using rule 44 (Arguments)

    AppelFonction   go to state 73
    Arguments       go to state 79
    ListeArguments  go to state 80
    Calcul          go to state 81
    DivMul          go to state 75
    Terme           go to state 76


State 52

   14 Main: tMAIN tPO tPF tAO Body tAF .

    $default  reduce using rule 14 (Main)


State 53

   17 Body: Declaration Body .

    $default  reduce using rule 17 (Body)


State 54

   18 Body: Initialisation Body .

    $default  reduce using rule 18 (Body)


State 55

   19 Body: Affectation Body .

    $default  reduce using rule 19 (Body)


State 56

   20 Body: BrancheIf Body .

    $default  reduce using rule 20 (Body)


State 57

   21 Body: BrancheWhile Body .

    $default  reduce using rule 21 (Body)


State 58

   22 Body: Printf Body .

    $default  reduce using rule 22 (Body)


State 59

   23 Body: AppelFonction tFI . Body

    tINT     shift, and go to state 28
    tPRINTF  shift, and go to state 29
    tWHILE   shift, and go to state 30
    tIF      shift, and go to state 31
    tID      shift, and go to state 32

    $default  reduce using rule 16 (Body)

    Body            go to state 82
    Declaration     go to state 34
    Initialisation  go to state 35
    Affectation     go to state 36
    BrancheIf       go to state 37
    BrancheWhile    go to state 38
    Printf          go to state 39
    AppelFonction   go to state 40


State 60

   12 Main: tINT tMAIN tPO tPF tAO BodyRet . tAF

    tAF  shift, and go to state 83


State 61

   15 BodyRet: Body . tRETURN Calcul tFI

    tRETURN  shift, and go to state 84


State 62

   11 ListeArgumentsDeclaration: tINT tID tV . ListeArgumentsDeclaration

    tINT  shift, and go to state 23

    ListeArgumentsDeclaration  go to state 85


State 63

    6 Fonction: tINT tID tPO ArgumentsDeclaration tPF tAO . BodyRet tAF

    tINT     shift, and go to state 28
    tPRINTF  shift, and go to state 29
    tWHILE   shift, and go to state 30
    tIF      shift, and go to state 31
    tID      shift, and go to state 32

    $default  reduce using rule 16 (Body)

    BodyRet         go to state 86
    Body            go to state 61
    Declaration     go to state 34
    Initialisation  go to state 35
    Affectation     go to state 36
    BrancheIf       go to state 37
    BrancheWhile    go to state 38
    Printf          go to state 39
    AppelFonction   go to state 40


State 64

   13 Main: tVOID tMAIN tPO tPF tAO Body . tAF

    tAF  shift, and go to state 87


State 65

    7 Fonction: tVOID tID tPO ArgumentsDeclaration tPF tAO . Body tAF

    tINT     shift, and go to state 28
    tPRINTF  shift, and go to state 29
    tWHILE   shift, and go to state 30
    tIF      shift, and go to state 31
    tID      shift, and go to state 32

    $default  reduce using rule 16 (Body)

    Body            go to state 88
    Declaration     go to state 34
    Initialisation  go to state 35
    Affectation     go to state 36
    BrancheIf       go to state 37
    BrancheWhile    go to state 38
    Printf          go to state 39
    AppelFonction   go to state 40


State 66

   24 Declaration: tINT tID tFI .

    $default  reduce using rule 24 (Declaration)


State 67

   26 Initialisation: tINT tID $@1 . tEGAL Calcul tFI

    tEGAL  shift, and go to state 89


State 68

   42 Printf: tPRINTF tPO tID . tPF tFI

    tPF  shift, and go to state 90


State 69

   54 Terme: tPO . Calcul tPF

    tPO  shift, and go to state 69
    tNB  shift, and go to state 70
    tID  shift, and go to state 71

    AppelFonction  go to state 73
    Calcul         go to state 91
    DivMul         go to state 75
    Terme          go to state 76


State 70

   56 Terme: tNB .

    $default  reduce using rule 56 (Terme)


State 71

   43 AppelFonction: tID . tPO Arguments tPF
   55 Terme: tID .

    tPO  shift, and go to state 51

    $default  reduce using rule 55 (Terme)


State 72

   41 BrancheWhile: tWHILE tPO Conditions . tPF tAO Body tAF

    tPF  shift, and go to state 92


State 73

   57 Terme: AppelFonction .

    $default  reduce using rule 57 (Terme)


State 74

   34 Conditions: Calcul . tEGAL tEGAL Calcul
   35           | Calcul . tINF Calcul
   36           | Calcul . tSUP Calcul
   37           | Calcul .
   48 Calcul: Calcul . tADD DivMul
   49       | Calcul . tSOU DivMul

    tEGAL  shift, and go to state 93
    tSOU   shift, and go to state 94
    tADD   shift, and go to state 95
    tINF   shift, and go to state 96
    tSUP   shift, and go to state 97

    $default  reduce using rule 37 (Conditions)


State 75

   50 Calcul: DivMul .
   51 DivMul: DivMul . tMUL Terme
   52       | DivMul . tDIV Terme

    tMUL  shift, and go to state 98
    tDIV  shift, and go to state 99

    $default  reduce using rule 50 (Calcul)


State 76

   53 DivMul: Terme .

    $default  reduce using rule 53 (DivMul)


State 77

   30 BrancheIf: tIF tPO Conditions . tPF $@2 tAO Body $@3 tAF
   33          | tIF tPO Conditions . tPF $@4 tAO Body $@5 tAF BranchesElseif

    tPF  shift, and go to state 100


State 78

   27 Affectation: tID tEGAL Calcul . tFI
   48 Calcul: Calcul . tADD DivMul
   49       | Calcul . tSOU DivMul

    tSOU  shift, and go to state 94
    tADD  shift, and go to state 95
    tFI   shift, and go to state 101


State 79

   43 AppelFonction: tID tPO Arguments . tPF

    tPF  shift, and go to state 102


State 80

   45 Arguments: ListeArguments .

    $default  reduce using rule 45 (Arguments)


State 81

   46 ListeArguments: Calcul .
   47               | Calcul . tV ListeArguments
   48 Calcul: Calcul . tADD DivMul
   49       | Calcul . tSOU DivMul

    tSOU  shift, and go to state 94
    tADD  shift, and go to state 95
    tV    shift, and go to state 103

    $default  reduce using rule 46 (ListeArguments)


State 82

   23 Body: AppelFonction tFI Body .

    $default  reduce using rule 23 (Body)


State 83

   12 Main: tINT tMAIN tPO tPF tAO BodyRet tAF .

    $default  reduce using rule 12 (Main)


State 84

   15 BodyRet: Body tRETURN . Calcul tFI

    tPO  shift, and go to state 69
    tNB  shift, and go to state 70
    tID  shift, and go to state 71

    AppelFonction  go to state 73
    Calcul         go to state 104
    DivMul         go to state 75
    Terme          go to state 76


State 85

   11 ListeArgumentsDeclaration: tINT tID tV ListeArgumentsDeclaration .

    $default  reduce using rule 11 (ListeArgumentsDeclaration)


State 86

    6 Fonction: tINT tID tPO ArgumentsDeclaration tPF tAO BodyRet . tAF

    tAF  shift, and go to state 105


State 87

   13 Main: tVOID tMAIN tPO tPF tAO Body tAF .

    $default  reduce using rule 13 (Main)


State 88

    7 Fonction: tVOID tID tPO ArgumentsDeclaration tPF tAO Body . tAF

    tAF  shift, and go to state 106


State 89

   26 Initialisation: tINT tID $@1 tEGAL . Calcul tFI

    tPO  shift, and go to state 69
    tNB  shift, and go to state 70
    tID  shift, and go to state 71

    AppelFonction  go to state 73
    Calcul         go to state 107
    DivMul         go to state 75
    Terme          go to state 76


State 90

   42 Printf: tPRINTF tPO tID tPF . tFI

    tFI  shift, and go to state 108


State 91

   48 Calcul: Calcul . tADD DivMul
   49       | Calcul . tSOU DivMul
   54 Terme: tPO Calcul . tPF

    tSOU  shift, and go to state 94
    tADD  shift, and go to state 95
    tPF   shift, and go to state 109


State 92

   41 BrancheWhile: tWHILE tPO Conditions tPF . tAO Body tAF

    tAO  shift, and go to state 110


State 93

   34 Conditions: Calcul tEGAL . tEGAL Calcul

    tEGAL  shift, and go to state 111


State 94

   49 Calcul: Calcul tSOU . DivMul

    tPO  shift, and go to state 69
    tNB  shift, and go to state 70
    tID  shift, and go to state 71

    AppelFonction  go to state 73
    DivMul         go to state 112
    Terme          go to state 76


State 95

   48 Calcul: Calcul tADD . DivMul

    tPO  shift, and go to state 69
    tNB  shift, and go to state 70
    tID  shift, and go to state 71

    AppelFonction  go to state 73
    DivMul         go to state 113
    Terme          go to state 76


State 96

   35 Conditions: Calcul tINF . Calcul

    tPO  shift, and go to state 69
    tNB  shift, and go to state 70
    tID  shift, and go to state 71

    AppelFonction  go to state 73
    Calcul         go to state 114
    DivMul         go to state 75
    Terme          go to state 76


State 97

   36 Conditions: Calcul tSUP . Calcul

    tPO  shift, and go to state 69
    tNB  shift, and go to state 70
    tID  shift, and go to state 71

    AppelFonction  go to state 73
    Calcul         go to state 115
    DivMul         go to state 75
    Terme          go to state 76


State 98

   51 DivMul: DivMul tMUL . Terme

    tPO  shift, and go to state 69
    tNB  shift, and go to state 70
    tID  shift, and go to state 71

    AppelFonction  go to state 73
    Terme          go to state 116


State 99

   52 DivMul: DivMul tDIV . Terme

    tPO  shift, and go to state 69
    tNB  shift, and go to state 70
    tID  shift, and go to state 71

    AppelFonction  go to state 73
    Terme          go to state 117


State 100

   30 BrancheIf: tIF tPO Conditions tPF . $@2 tAO Body $@3 tAF
   33          | tIF tPO Conditions tPF . $@4 tAO Body $@5 tAF BranchesElseif

    tAO       reduce using rule 28 ($@2)
    tAO       [reduce using rule 31 ($@4)]
    $default  reduce using rule 28 ($@2)

    $@2  go to state 118
    $@4  go to state 119


State 101

   27 Affectation: tID tEGAL Calcul tFI .

    $default  reduce using rule 27 (Affectation)


State 102

   43 AppelFonction: tID tPO Arguments tPF .

    $default  reduce using rule 43 (AppelFonction)


State 103

   47 ListeArguments: Calcul tV . ListeArguments

    tPO  shift, and go to state 69
    tNB  shift, and go to state 70
    tID  shift, and go to state 71

    AppelFonction   go to state 73
    ListeArguments  go to state 120
    Calcul          go to state 81
    DivMul          go to state 75
    Terme           go to state 76


State 104

   15 BodyRet: Body tRETURN Calcul . tFI
   48 Calcul: Calcul . tADD DivMul
   49       | Calcul . tSOU DivMul

    tSOU  shift, and go to state 94
    tADD  shift, and go to state 95
    tFI   shift, and go to state 121


State 105

    6 Fonction: tINT tID tPO ArgumentsDeclaration tPF tAO BodyRet tAF .

    $default  reduce using rule 6 (Fonction)


State 106

    7 Fonction: tVOID tID tPO ArgumentsDeclaration tPF tAO Body tAF .

    $default  reduce using rule 7 (Fonction)


State 107

   26 Initialisation: tINT tID $@1 tEGAL Calcul . tFI
   48 Calcul: Calcul . tADD DivMul
   49       | Calcul . tSOU DivMul

    tSOU  shift, and go to state 94
    tADD  shift, and go to state 95
    tFI   shift, and go to state 122


State 108

   42 Printf: tPRINTF tPO tID tPF tFI .

    $default  reduce using rule 42 (Printf)


State 109

   54 Terme: tPO Calcul tPF .

    $default  reduce using rule 54 (Terme)


State 110

   41 BrancheWhile: tWHILE tPO Conditions tPF tAO . Body tAF

    tINT     shift, and go to state 28
    tPRINTF  shift, and go to state 29
    tWHILE   shift, and go to state 30
    tIF      shift, and go to state 31
    tID      shift, and go to state 32

    $default  reduce using rule 16 (Body)

    Body            go to state 123
    Declaration     go to state 34
    Initialisation  go to state 35
    Affectation     go to state 36
    BrancheIf       go to state 37
    BrancheWhile    go to state 38
    Printf          go to state 39
    AppelFonction   go to state 40


State 111

   34 Conditions: Calcul tEGAL tEGAL . Calcul

    tPO  shift, and go to state 69
    tNB  shift, and go to state 70
    tID  shift, and go to state 71

    AppelFonction  go to state 73
    Calcul         go to state 124
    DivMul         go to state 75
    Terme          go to state 76


State 112

   49 Calcul: Calcul tSOU DivMul .
   51 DivMul: DivMul . tMUL Terme
   52       | DivMul . tDIV Terme

    tMUL  shift, and go to state 98
    tDIV  shift, and go to state 99

    $default  reduce using rule 49 (Calcul)


State 113

   48 Calcul: Calcul tADD DivMul .
   51 DivMul: DivMul . tMUL Terme
   52       | DivMul . tDIV Terme

    tMUL  shift, and go to state 98
    tDIV  shift, and go to state 99

    $default  reduce using rule 48 (Calcul)


State 114

   35 Conditions: Calcul tINF Calcul .
   48 Calcul: Calcul . tADD DivMul
   49       | Calcul . tSOU DivMul

    tSOU  shift, and go to state 94
    tADD  shift, and go to state 95

    $default  reduce using rule 35 (Conditions)


State 115

   36 Conditions: Calcul tSUP Calcul .
   48 Calcul: Calcul . tADD DivMul
   49       | Calcul . tSOU DivMul

    tSOU  shift, and go to state 94
    tADD  shift, and go to state 95

    $default  reduce using rule 36 (Conditions)


State 116

   51 DivMul: DivMul tMUL Terme .

    $default  reduce using rule 51 (DivMul)


State 117

   52 DivMul: DivMul tDIV Terme .

    $default  reduce using rule 52 (DivMul)


State 118

   30 BrancheIf: tIF tPO Conditions tPF $@2 . tAO Body $@3 tAF

    tAO  shift, and go to state 125


State 119

   33 BrancheIf: tIF tPO Conditions tPF $@4 . tAO Body $@5 tAF BranchesElseif

    tAO  shift, and go to state 126


State 120

   47 ListeArguments: Calcul tV ListeArguments .

    $default  reduce using rule 47 (ListeArguments)


State 121

   15 BodyRet: Body tRETURN Calcul tFI .

    $default  reduce using rule 15 (BodyRet)


State 122

   26 Initialisation: tINT tID $@1 tEGAL Calcul tFI .

    $default  reduce using rule 26 (Initialisation)


State 123

   41 BrancheWhile: tWHILE tPO Conditions tPF tAO Body . tAF

    tAF  shift, and go to state 127


State 124

   34 Conditions: Calcul tEGAL tEGAL Calcul .
   48 Calcul: Calcul . tADD DivMul
   49       | Calcul . tSOU DivMul

    tSOU  shift, and go to state 94
    tADD  shift, and go to state 95

    $default  reduce using rule 34 (Conditions)


State 125

   30 BrancheIf: tIF tPO Conditions tPF $@2 tAO . Body $@3 tAF

    tINT     shift, and go to state 28
    tPRINTF  shift, and go to state 29
    tWHILE   shift, and go to state 30
    tIF      shift, and go to state 31
    tID      shift, and go to state 32

    $default  reduce using rule 16 (Body)

    Body            go to state 128
    Declaration     go to state 34
    Initialisation  go to state 35
    Affectation     go to state 36
    BrancheIf       go to state 37
    BrancheWhile    go to state 38
    Printf          go to state 39
    AppelFonction   go to state 40


State 126

   33 BrancheIf: tIF tPO Conditions tPF $@4 tAO . Body $@5 tAF BranchesElseif

    tINT     shift, and go to state 28
    tPRINTF  shift, and go to state 29
    tWHILE   shift, and go to state 30
    tIF      shift, and go to state 31
    tID      shift, and go to state 32

    $default  reduce using rule 16 (Body)

    Body            go to state 129
    Declaration     go to state 34
    Initialisation  go to state 35
    Affectation     go to state 36
    BrancheIf       go to state 37
    BrancheWhile    go to state 38
    Printf          go to state 39
    AppelFonction   go to state 40


State 127

   41 BrancheWhile: tWHILE tPO Conditions tPF tAO Body tAF .

    $default  reduce using rule 41 (BrancheWhile)


State 128

   30 BrancheIf: tIF tPO Conditions tPF $@2 tAO Body . $@3 tAF

    $default  reduce using rule 29 ($@3)

    $@3  go to state 130


State 129

   33 BrancheIf: tIF tPO Conditions tPF $@4 tAO Body . $@5 tAF BranchesElseif

    $default  reduce using rule 32 ($@5)

    $@5  go to state 131


State 130

   30 BrancheIf: tIF tPO Conditions tPF $@2 tAO Body $@3 . tAF

    tAF  shift, and go to state 132


State 131

   33 BrancheIf: tIF tPO Conditions tPF $@4 tAO Body $@5 . tAF BranchesElseif

    tAF  shift, and go to state 133


State 132

   30 BrancheIf: tIF tPO Conditions tPF $@2 tAO Body $@3 tAF .

    $default  reduce using rule 30 (BrancheIf)


State 133

   33 BrancheIf: tIF tPO Conditions tPF $@4 tAO Body $@5 tAF . BranchesElseif

    tELSE  shift, and go to state 134

    BranchesElseif  go to state 135


State 134

   38 BranchesElseif: tELSE . BrancheIf
   40               | tELSE . $@6 tAO Body tAF

    tIF  shift, and go to state 31

    $default  reduce using rule 39 ($@6)

    BrancheIf  go to state 136
    $@6        go to state 137


State 135

   33 BrancheIf: tIF tPO Conditions tPF $@4 tAO Body $@5 tAF BranchesElseif .

    $default  reduce using rule 33 (BrancheIf)


State 136

   38 BranchesElseif: tELSE BrancheIf .

    $default  reduce using rule 38 (BranchesElseif)


State 137

   40 BranchesElseif: tELSE $@6 . tAO Body tAF

    tAO  shift, and go to state 138


State 138

   40 BranchesElseif: tELSE $@6 tAO . Body tAF

    tINT     shift, and go to state 28
    tPRINTF  shift, and go to state 29
    tWHILE   shift, and go to state 30
    tIF      shift, and go to state 31
    tID      shift, and go to state 32

    $default  reduce using rule 16 (Body)

    Body            go to state 139
    Declaration     go to state 34
    Initialisation  go to state 35
    Affectation     go to state 36
    BrancheIf       go to state 37
    BrancheWhile    go to state 38
    Printf          go to state 39
    AppelFonction   go to state 40


State 139

   40 BranchesElseif: tELSE $@6 tAO Body . tAF

    tAF  shift, and go to state 140


State 140

   40 BranchesElseif: tELSE $@6 tAO Body tAF .

    $default  reduce using rule 40 (BranchesElseif)
