Nos questions :

1/ Est ce que notre porgramme c'est juste un main sans fonctions ? -----POUR LE MOMENT PAS DE FONCTION
Regarder barème mais c'est conseillé

2/ Void, int et return pour le main ? -----MANQUE GESTION RETURN
Oui mais que des int

3/ Quelle est la forme du printf ? (une variable ?) -----FAIT EN THÉORIE
Oui pas comme en c

4/ Pour les opérations (comparaisons dans les if et while), comment on fait ? -----EN COURS
On éclate dans "Conditions"









TRAVAIL À FAIRE :

• OK - la fonction main (), les accolades { et }

• _ - les constantes de type entier( mot clé : const ) et leur noms

• OK - les variables de type entier (mot clé : int ) et leur noms. Le nom d’une variable ou d’une constante doit commencer par une lettre et peut contenir de
lettres, des chiffres et le underscore _

• OK - les opérations arithmétiques définies par les signes mathématiques suivants : +, -, *, /, = et les parenthèses ( )

• OK - les séparateurs : espace, TAB et virgule

• OK - la fin de ligne \n

• OK - la fin d’une instruction signalée par " ; " comme en langage C classique

• OK - la fonction printf() ayant 1 seul paramètre : la variable dont la valeur doit être affichée

• OK - les entiers doivent être reconnus sous la forme décimale et la forme exponentielle

• _ - notre langage C permet la déclaration de plusieurs variables dans la même ligne (ex : int toto, mimi=5 ; ) ou la déclaration de plusieurs constantes dans
la même ligne. Dans ce cas n’oubliez pas d’allouer de la mémoire pour chacune des variables et/ou constantes déclarées

• _ - notre langage C fait la différence entre lettres minuscules et majuscules. Les mots clés du langage seront reconnus seulement s’ils sont écrits en
minuscule.

• _ - On autorise la déclaration des constantes et variables seulement à l’intérieur de la fonction main(). Cette partie déclarative doit se trouver avant les
instructions, obligatoirement.

• _ - aucune autre appel de fonction n’est reconnu par notre langage C simplifié, dans une première phase



